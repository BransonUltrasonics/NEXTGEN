#include <private/qv4value_p.h>
#include <private/qv4context_p.h>
#include <private/qv4engine_p.h>
#include <private/qv4runtime_p.h>
#include <private/qv4runtime_p.h>
#include <private/qv4runtimeapi_p.h>
#include <private/qv4lookup_p.h>
#include <private/qv4string_p.h>
#include <qqml.h>

typedef QV4::ReturnedValue (*AOTFunction)(QV4::ExecutionEngine*);

#if QT_VERSION != 0x50901
#error This file was generated with the QtQuick Compiler for Qt 5.9.1. It cannot
#error be used with this version of Qt. Please re-generate it with the version of
#error the compiler that came with your Qt.
#endif

namespace {
static inline double hex2double(quint64 hex) {
    double dbl;
    memcpy(&dbl, &hex, sizeof(quint64));
    return dbl;
}
QV4::ReturnedValue jsfunction_0(QV4::ExecutionEngine *engine) // context scope
{
    QV4::Scope scope(engine);

    return QV4::Primitive::undefinedValue().asReturnedValue();

}

QV4::ReturnedValue jsfunction_1(QV4::ExecutionEngine *engine) // expression for onPressed
{
    QV4::Scope scope(engine);
    QV4::Value *temps = scope.alloc(4);

        
    // line 18
    engine->currentContext->d()->lineNumber = 18;
    temps[0] = QV4::Runtime::method_getActivationProperty(engine, 26);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    temps[1] = QV4::Runtime::method_getActivationProperty(engine, 27);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[1]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 28);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[2] = retval;
    }
    {
        const QV4::Value &arg2(temps[0]);
        const QV4::Value &arg4(temps[2]);
        QV4::Runtime::method_setProperty(engine, arg2, 29, arg4);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
    }
    
    // line 19
    engine->currentContext->d()->lineNumber = 19;
    temps[0] = QV4::Runtime::method_getActivationProperty(engine, 30);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    temps[1] = QV4::Runtime::method_getActivationProperty(engine, 31);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[1]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 14);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[2] = retval;
    }
    temps[1] = QV4::Runtime::method_getActivationProperty(engine, 31);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[1]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 15);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[3] = retval;
    }
    {
        QV4::Scope innerScope(engine);
        QV4::ScopedCallData callData(innerScope, 2);
        callData->thisObject = temps[0];
        callData->args[0] = temps[2];
        callData->args[1] = temps[3];
        {
            QV4::Value retval;
            retval = QV4::Runtime::method_callProperty(engine, 32, callData);
            if (Q_UNLIKELY(engine->hasException))
                return QV4::Encode::undefined();
            temps[1] = retval;
        }
    }
    {
        const QV4::Value &arg(temps[1]);
        QV4::Runtime::method_setActivationProperty(engine, 19, arg);
    }
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    return temps[1].asReturnedValue();

}

QV4::ReturnedValue jsfunction_2(QV4::ExecutionEngine *engine) // expression for onPositionChanged
{
    QV4::Scope scope(engine);
    QV4::Value *temps = scope.alloc(7);
    double temp_double_2;
    double temp_double_3;
    double temp_double_4;
    double temp_double_5;
    double temp_double_6;
    double temp_double_0;
    double temp_double_1;

        
    // line 23
    engine->currentContext->d()->lineNumber = 23;
    temps[0] = QV4::Runtime::method_getActivationProperty(engine, 26);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[0]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 29);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[1] = retval;
    }
    temps[0] = QV4::Runtime::method_getActivationProperty(engine, 27);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[0]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 28);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[2] = retval;
    }
    
    // line 24
    engine->currentContext->d()->lineNumber = 24;
    {
        const QV4::Value &left(temps[1]);
        const QV4::Value &right(temps[2]);
        if (QV4::Runtime::method_compareStrictEqual(left, right))goto L1;
        else
        goto L8;
    }
L1:
    
    // line 25
    engine->currentContext->d()->lineNumber = 25;
    temps[0] = QV4::Runtime::method_getActivationProperty(engine, 33);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    temps[2] = QV4::Runtime::method_getActivationProperty(engine, 31);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[2]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 14);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[3] = retval;
    }
    temps[2] = QV4::Runtime::method_getActivationProperty(engine, 19);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[2]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 14);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[4] = retval;
    }
    temp_double_2 = (double)temps[3].toNumber();
    temp_double_3 = (double)temps[4].toNumber();
    temp_double_4 = (double)temp_double_2-(double)temp_double_3;
    {
        QV4::Scope innerScope(engine);
        QV4::ScopedCallData callData(innerScope, 1);
        callData->thisObject = temps[0];
        callData->args[0] = QV4::Encode(temp_double_4).val;
        {
            QV4::Value retval;
            retval = QV4::Runtime::method_callProperty(engine, 34, callData);
            if (Q_UNLIKELY(engine->hasException))
                return QV4::Encode::undefined();
            temps[2] = retval;
        }
    }
    temps[0] = QV4::Runtime::method_getActivationProperty(engine, 3);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &left(temps[2]);
        const QV4::Value &right(temps[0]);
        if (QV4::Runtime::method_compareGreaterThan(left, right))goto L2;
        else
        goto L3;
    }
L2:
    
    // line 26
    engine->currentContext->d()->lineNumber = 26;
    temps[0] = QV4::Runtime::method_getActivationProperty(engine, 26);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    temps[2] = QV4::Runtime::method_getActivationProperty(engine, 27);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[2]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 35);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[3] = retval;
    }
    {
        const QV4::Value &arg2(temps[0]);
        const QV4::Value &arg4(temps[3]);
        QV4::Runtime::method_setProperty(engine, arg2, 29, arg4);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
    }
    temps[0] = temps[3];
    goto L7;
L3:
    
    // line 27
    engine->currentContext->d()->lineNumber = 27;
    temps[3] = QV4::Runtime::method_getActivationProperty(engine, 33);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    temps[4] = QV4::Runtime::method_getActivationProperty(engine, 31);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[4]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 15);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[5] = retval;
    }
    temps[4] = QV4::Runtime::method_getActivationProperty(engine, 19);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[4]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 15);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[6] = retval;
    }
    temp_double_4 = (double)temps[5].toNumber();
    temp_double_5 = (double)temps[6].toNumber();
    temp_double_6 = (double)temp_double_4-(double)temp_double_5;
    {
        QV4::Scope innerScope(engine);
        QV4::ScopedCallData callData(innerScope, 1);
        callData->thisObject = temps[3];
        callData->args[0] = QV4::Encode(temp_double_6).val;
        {
            QV4::Value retval;
            retval = QV4::Runtime::method_callProperty(engine, 34, callData);
            if (Q_UNLIKELY(engine->hasException))
                return QV4::Encode::undefined();
            temps[4] = retval;
        }
    }
    temps[3] = QV4::Runtime::method_getActivationProperty(engine, 3);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &left(temps[4]);
        const QV4::Value &right(temps[3]);
        if (QV4::Runtime::method_compareGreaterThan(left, right))goto L4;
        else
        goto L5;
    }
L4:
    
    // line 28
    engine->currentContext->d()->lineNumber = 28;
    temps[3] = QV4::Runtime::method_getActivationProperty(engine, 26);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    temps[4] = QV4::Runtime::method_getActivationProperty(engine, 27);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[4]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 36);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[5] = retval;
    }
    {
        const QV4::Value &arg2(temps[3]);
        const QV4::Value &arg4(temps[5]);
        QV4::Runtime::method_setProperty(engine, arg2, 29, arg4);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
    }
    temps[2] = temps[5];
    goto L6;
L5:
    temps[2] = QV4::Primitive::undefinedValue();
L6:
    temps[0] = temps[2];
L7:
    temps[2] = temps[0];
    goto L13;
L8:
    temps[0] = QV4::Runtime::method_getActivationProperty(engine, 27);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[0]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 35);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[5] = retval;
    }
    
    // line 31
    engine->currentContext->d()->lineNumber = 31;
    {
        const QV4::Value &left(temps[1]);
        const QV4::Value &right(temps[5]);
        if (QV4::Runtime::method_compareStrictEqual(left, right))goto L9;
        else
        goto L10;
    }
L9:
    temps[0] = QV4::Runtime::method_getActivationProperty(engine, 31);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[0]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 14);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[5] = retval;
    }
    temps[0] = QV4::Runtime::method_getActivationProperty(engine, 19);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[0]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 14);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[6] = retval;
    }
    temp_double_0 = (double)temps[5].toNumber();
    temp_double_5 = (double)temps[6].toNumber();
    temp_double_6 = (double)temp_double_0-(double)temp_double_5;
    {
        QV4::Scope innerScope(engine);
        QV4::ScopedCallData callData(innerScope, 2);
        callData->thisObject = QV4::Encode::undefined();
        callData->args[0] = QV4::Encode(temp_double_6).val;
        callData->args[1] = QV4::Primitive::fromInt32(0);
        {
            QV4::Value retval;
            retval = QV4::Runtime::method_callActivationProperty(engine, 13, callData);
            if (Q_UNLIKELY(engine->hasException))
                return QV4::Encode::undefined();
            temps[3] = retval;
        }
    }
    temps[2] = temps[3];
    goto L13;
L10:
    temps[0] = QV4::Runtime::method_getActivationProperty(engine, 27);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[0]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 36);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[3] = retval;
    }
    
    // line 32
    engine->currentContext->d()->lineNumber = 32;
    {
        const QV4::Value &left(temps[1]);
        const QV4::Value &right(temps[3]);
        if (QV4::Runtime::method_compareStrictEqual(left, right))goto L11;
        else
        goto L12;
    }
L11:
    temps[0] = QV4::Runtime::method_getActivationProperty(engine, 31);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[0]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 15);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[1] = retval;
    }
    temps[0] = QV4::Runtime::method_getActivationProperty(engine, 19);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[0]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 15);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[3] = retval;
    }
    temp_double_0 = (double)temps[1].toNumber();
    temp_double_1 = (double)temps[3].toNumber();
    temp_double_3 = (double)temp_double_0-(double)temp_double_1;
    {
        QV4::Scope innerScope(engine);
        QV4::ScopedCallData callData(innerScope, 2);
        callData->thisObject = QV4::Encode::undefined();
        callData->args[0] = QV4::Primitive::fromInt32(0);
        callData->args[1] = QV4::Encode(temp_double_3).val;
        {
            QV4::Value retval;
            retval = QV4::Runtime::method_callActivationProperty(engine, 13, callData);
            if (Q_UNLIKELY(engine->hasException))
                return QV4::Encode::undefined();
            temps[4] = retval;
        }
    }
    temps[2] = temps[4];
    goto L13;
L12:
    temps[2] = QV4::Primitive::undefinedValue();
L13:
    return temps[2].asReturnedValue();

}

QV4::ReturnedValue jsfunction_3(QV4::ExecutionEngine *engine) // expression for onReleased
{
    QV4::Scope scope(engine);
    QV4::Value *temps = scope.alloc(9);
    double temp_double_2;
    double temp_double_5;
    double temp_double_6;
    double temp_double_7;
    double temp_double_8;
    double temp_double_1;
    double temp_double_3;

        
    // line 37
    engine->currentContext->d()->lineNumber = 37;
    temps[0] = QV4::Runtime::method_getActivationProperty(engine, 26);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[0]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 29);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[1] = retval;
    }
    temps[0] = QV4::Runtime::method_getActivationProperty(engine, 27);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[0]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 28);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[2] = retval;
    }
    
    // line 38
    engine->currentContext->d()->lineNumber = 38;
    {
        const QV4::Value &left(temps[1]);
        const QV4::Value &right(temps[2]);
        if (QV4::Runtime::method_compareStrictEqual(left, right))goto L1;
        else
        goto L2;
    }
L1:
    temps[0] = QV4::Runtime::method_getActivationProperty(engine, 31);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        QV4::Scope innerScope(engine);
        QV4::ScopedCallData callData(innerScope, 1);
        callData->thisObject = QV4::Encode::undefined();
        callData->args[0] = temps[0];
        {
            QV4::Value retval;
            retval = QV4::Runtime::method_callActivationProperty(engine, 37, callData);
            if (Q_UNLIKELY(engine->hasException))
                return QV4::Encode::undefined();
            temps[2] = retval;
        }
    }
    temps[0] = temps[2];
    goto L13;
L2:
    temps[2] = QV4::Runtime::method_getActivationProperty(engine, 27);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[2]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 35);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[5] = retval;
    }
    
    // line 39
    engine->currentContext->d()->lineNumber = 39;
    {
        const QV4::Value &left(temps[1]);
        const QV4::Value &right(temps[5]);
        if (QV4::Runtime::method_compareStrictEqual(left, right))goto L3;
        else
        goto L7;
    }
L3:
    temps[2] = QV4::Runtime::method_getActivationProperty(engine, 31);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[2]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 14);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[5] = retval;
    }
    temps[2] = QV4::Runtime::method_getActivationProperty(engine, 19);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[2]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 14);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[6] = retval;
    }
    temp_double_2 = (double)temps[5].toNumber();
    temp_double_5 = (double)temps[6].toNumber();
    temp_double_6 = (double)temp_double_2-(double)temp_double_5;
    {
        if (temp_double_6<hex2double(0x0 /* = 0 */))goto L4;
        else
        goto L5;
    }
L4:
    temps[2] = QV4::Runtime::method_getActivationProperty(engine, 9);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    temps[5] = temps[2];
    goto L6;
L5:
    temps[6] = QV4::Runtime::method_getActivationProperty(engine, 11);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    temps[5] = temps[6];
L6:
    temps[2] = QV4::Runtime::method_getActivationProperty(engine, 33);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    temps[6] = QV4::Runtime::method_getActivationProperty(engine, 31);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[6]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 14);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[7] = retval;
    }
    temps[6] = QV4::Runtime::method_getActivationProperty(engine, 19);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[6]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 14);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[8] = retval;
    }
    temp_double_6 = (double)temps[7].toNumber();
    temp_double_7 = (double)temps[8].toNumber();
    temp_double_8 = (double)temp_double_6-(double)temp_double_7;
    {
        QV4::Scope innerScope(engine);
        QV4::ScopedCallData callData(innerScope, 1);
        callData->thisObject = temps[2];
        callData->args[0] = QV4::Encode(temp_double_8).val;
        {
            QV4::Value retval;
            retval = QV4::Runtime::method_callProperty(engine, 34, callData);
            if (Q_UNLIKELY(engine->hasException))
                return QV4::Encode::undefined();
            temps[6] = retval;
        }
    }
    {
        QV4::Scope innerScope(engine);
        QV4::ScopedCallData callData(innerScope, 2);
        callData->thisObject = QV4::Encode::undefined();
        callData->args[0] = temps[5];
        callData->args[1] = temps[6];
        {
            QV4::Value retval;
            retval = QV4::Runtime::method_callActivationProperty(engine, 16, callData);
            if (Q_UNLIKELY(engine->hasException))
                return QV4::Encode::undefined();
            temps[3] = retval;
        }
    }
    temps[0] = temps[3];
    goto L13;
L7:
    temps[2] = QV4::Runtime::method_getActivationProperty(engine, 27);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[2]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 36);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[3] = retval;
    }
    
    // line 40
    engine->currentContext->d()->lineNumber = 40;
    {
        const QV4::Value &left(temps[1]);
        const QV4::Value &right(temps[3]);
        if (QV4::Runtime::method_compareStrictEqual(left, right))goto L8;
        else
        goto L12;
    }
L8:
    temps[1] = QV4::Runtime::method_getActivationProperty(engine, 31);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[1]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 15);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[2] = retval;
    }
    temps[1] = QV4::Runtime::method_getActivationProperty(engine, 19);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[1]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 15);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[3] = retval;
    }
    temp_double_1 = (double)temps[2].toNumber();
    temp_double_2 = (double)temps[3].toNumber();
    temp_double_3 = (double)temp_double_1-(double)temp_double_2;
    {
        if (temp_double_3<hex2double(0x0 /* = 0 */))goto L9;
        else
        goto L10;
    }
L9:
    temps[1] = QV4::Runtime::method_getActivationProperty(engine, 5);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    temps[2] = temps[1];
    goto L11;
L10:
    temps[3] = QV4::Runtime::method_getActivationProperty(engine, 7);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    temps[2] = temps[3];
L11:
    temps[1] = QV4::Runtime::method_getActivationProperty(engine, 33);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    temps[3] = QV4::Runtime::method_getActivationProperty(engine, 31);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[3]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 15);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[5] = retval;
    }
    temps[3] = QV4::Runtime::method_getActivationProperty(engine, 19);
    if (Q_UNLIKELY(engine->hasException))
        return QV4::Encode::undefined();
    {
        const QV4::Value &arg2(temps[3]);
        QV4::Value retval;
        retval = QV4::Runtime::method_getProperty(engine, arg2, 15);
        if (Q_UNLIKELY(engine->hasException))
            return QV4::Encode::undefined();
        temps[6] = retval;
    }
    temp_double_3 = (double)temps[5].toNumber();
    temp_double_5 = (double)temps[6].toNumber();
    temp_double_6 = (double)temp_double_3-(double)temp_double_5;
    {
        QV4::Scope innerScope(engine);
        QV4::ScopedCallData callData(innerScope, 1);
        callData->thisObject = temps[1];
        callData->args[0] = QV4::Encode(temp_double_6).val;
        {
            QV4::Value retval;
            retval = QV4::Runtime::method_callProperty(engine, 34, callData);
            if (Q_UNLIKELY(engine->hasException))
                return QV4::Encode::undefined();
            temps[3] = retval;
        }
    }
    {
        QV4::Scope innerScope(engine);
        QV4::ScopedCallData callData(innerScope, 2);
        callData->thisObject = QV4::Encode::undefined();
        callData->args[0] = temps[2];
        callData->args[1] = temps[3];
        {
            QV4::Value retval;
            retval = QV4::Runtime::method_callActivationProperty(engine, 16, callData);
            if (Q_UNLIKELY(engine->hasException))
                return QV4::Encode::undefined();
            temps[4] = retval;
        }
    }
    temps[0] = temps[4];
    goto L13;
L12:
    temps[0] = QV4::Primitive::undefinedValue();
L13:
    return temps[0].asReturnedValue();

}
} // anonymous namespace

namespace QtQuickCompilerGeneratedModule {
namespace _QmlSource_CustomGestureArea_qml {

AOTFunction moduleFunctions[5] = {
&jsfunction_0,
&jsfunction_1,
&jsfunction_2,
&jsfunction_3,

};

#if defined(Q_COMPILER_ALIGNAS)
extern const unsigned char qmlData alignas(16) [] = { 
#else
extern Q_DECL_ALIGN(16) const unsigned char qmlData[] = { 
#endif

0x71,0x76,0x34,0x63,0x64,0x61,0x74,0x61,
0x11,0x0,0x0,0x0,0x1,0x9,0x5,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xcc,0x8,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x28,0x0,0x0,0x0,
0x29,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x7,0x0,0x0,0x0,
0x2a,0x0,0x0,0x0,0x1c,0x4,0x0,0x0,
0x4,0x0,0x0,0x0,0x94,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xa4,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xa4,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xb0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xb0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x26,0x0,0x0,0x0,
0x1,0x0,0x0,0x0,0xe0,0x1,0x0,0x0,
0x1,0x0,0x0,0x0,0xf8,0x1,0x0,0x0,
0x0,0x0,0x0,0x0,0xb0,0x0,0x0,0x0,
0x8,0x1,0x0,0x0,0x50,0x1,0x0,0x0,
0x98,0x1,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x27,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x48,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x48,0x0,0x0,0x0,0x3,0x0,0x0,0x0,
0x1,0x0,0x10,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x15,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x48,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x48,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x11,0x0,0x0,0x1,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x17,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x48,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x48,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x16,0x0,0x80,0x1,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x19,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x48,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x48,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x24,0x0,0x10,0x1,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x1,0x0,0x0,0x0,0x1,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x2,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x1,0x0,0x10,0x0,
0xfc,0x1,0x0,0x0,0x2,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0xff,0xff,
0xff,0xff,0xff,0xff,0x0,0x0,0x0,0x0,
0x48,0x0,0x0,0x0,0x7,0x0,0x0,0x0,
0x48,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xb8,0x0,0x0,0x0,0x2,0x0,0x0,0x0,
0xb8,0x0,0x0,0x0,0x9,0x0,0x0,0x0,
0xc0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xbc,0x1,0x0,0x0,0x3,0x0,0x10,0x0,
0x0,0x0,0x0,0x0,0x3,0x0,0x0,0x0,
0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x4,0x0,0x50,0x0,0x4,0x0,0x0,0x0,
0x3,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x5,0x0,0x50,0x0,0x5,0x0,0x0,0x0,
0x5,0x0,0x0,0x80,0x0,0x0,0x0,0x0,
0x7,0x0,0x50,0x0,0x7,0x0,0x0,0x0,
0x5,0x0,0x0,0x80,0x0,0x0,0x0,0x0,
0x8,0x0,0x50,0x0,0x9,0x0,0x0,0x0,
0x5,0x0,0x0,0x80,0x0,0x0,0x0,0x0,
0x9,0x0,0x50,0x0,0xb,0x0,0x0,0x0,
0x5,0x0,0x0,0x80,0x0,0x0,0x0,0x0,
0xa,0x0,0x50,0x0,0x13,0x0,0x0,0x0,
0xd,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xf,0x0,0x50,0x0,0xbc,0x1,0x0,0x0,
0xec,0x1,0x0,0x0,0x18,0x0,0x0,0x0,
0x0,0x0,0x6,0x0,0x3,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x24,0x0,0x50,0x0,0x24,0x0,0x10,0x1,
0x16,0x0,0x0,0x0,0x0,0x0,0x6,0x0,
0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x16,0x0,0x50,0x0,
0x16,0x0,0x80,0x1,0x14,0x0,0x0,0x0,
0x0,0x0,0x6,0x0,0x1,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x11,0x0,0x50,0x0,0x11,0x0,0x0,0x1,
0xb,0x0,0x0,0x0,0x8,0x0,0x3,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xc,0x0,0x0,0x0,0xa,0x0,0xe0,0x1,
0xa,0x0,0x90,0x2,0x9,0x0,0x0,0x0,
0x8,0x0,0x3,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xa,0x0,0x0,0x0,
0x9,0x0,0xe0,0x1,0x9,0x0,0x90,0x2,
0x7,0x0,0x0,0x0,0x8,0x0,0x3,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x8,0x0,0x0,0x0,0x8,0x0,0xe0,0x1,
0x8,0x0,0x90,0x2,0x5,0x0,0x0,0x0,
0x8,0x0,0x3,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x6,0x0,0x0,0x0,
0x7,0x0,0xe0,0x1,0x7,0x0,0x90,0x2,
0x4,0x0,0x0,0x0,0x0,0x0,0x1,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x5,0x0,0x30,0x1,
0x5,0x0,0xa0,0x1,0x3,0x0,0x0,0x0,
0x0,0x0,0x2,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x40,0x40,0x0,0x0,0x0,0x0,
0x4,0x0,0x20,0x1,0x4,0x0,0x10,0x2,
0xd,0x0,0x0,0x0,0x2,0x0,0x0,0x0,
0xc,0x0,0xc0,0x0,0xe,0x0,0x0,0x0,
0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xc,0x0,0x50,0x1,0xf,0x0,0x0,0x0,
0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xc,0x0,0xc0,0x1,0x0,0x0,0x0,0x0,
0x10,0x0,0x0,0x0,0x2,0x0,0x0,0x0,
0xd,0x0,0xc0,0x0,0x11,0x0,0x0,0x0,
0x5,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xd,0x0,0x90,0x1,0x12,0x0,0x0,0x0,
0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0xd,0x0,0x80,0x2,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0xc4,0x4,0x0,0x0,
0xcc,0x4,0x0,0x0,0xe4,0x4,0x0,0x0,
0xfc,0x4,0x0,0x0,0x1c,0x5,0x0,0x0,
0x2c,0x5,0x0,0x0,0x3c,0x5,0x0,0x0,
0x44,0x5,0x0,0x0,0x5c,0x5,0x0,0x0,
0x6c,0x5,0x0,0x0,0x84,0x5,0x0,0x0,
0x94,0x5,0x0,0x0,0xac,0x5,0x0,0x0,
0xbc,0x5,0x0,0x0,0xcc,0x5,0x0,0x0,
0xd4,0x5,0x0,0x0,0xdc,0x5,0x0,0x0,
0xec,0x5,0x0,0x0,0x4,0x6,0x0,0x0,
0x1c,0x6,0x0,0x0,0x3c,0x6,0x0,0x0,
0x54,0x6,0x0,0x0,0x8c,0x6,0x0,0x0,
0xb4,0x6,0x0,0x0,0xfc,0x6,0x0,0x0,
0x14,0x7,0x0,0x0,0x4c,0x7,0x0,0x0,
0x5c,0x7,0x0,0x0,0x6c,0x7,0x0,0x0,
0x84,0x7,0x0,0x0,0x94,0x7,0x0,0x0,
0x9c,0x7,0x0,0x0,0xac,0x7,0x0,0x0,
0xbc,0x7,0x0,0x0,0xcc,0x7,0x0,0x0,
0xdc,0x7,0x0,0x0,0xec,0x7,0x0,0x0,
0xfc,0x7,0x0,0x0,0x14,0x8,0x0,0x0,
0x64,0x8,0x0,0x0,0x84,0x8,0x0,0x0,
0xbc,0x8,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x7,0x0,0x0,0x0,
0x51,0x0,0x74,0x0,0x51,0x0,0x75,0x0,
0x69,0x0,0x63,0x0,0x6b,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x9,0x0,0x0,0x0,
0x4d,0x0,0x6f,0x0,0x75,0x0,0x73,0x0,
0x65,0x0,0x41,0x0,0x72,0x0,0x65,0x0,
0x61,0x0,0x0,0x0,0xd,0x0,0x0,0x0,
0x73,0x0,0x77,0x0,0x69,0x0,0x70,0x0,
0x65,0x0,0x54,0x0,0x72,0x0,0x65,0x0,
0x73,0x0,0x68,0x0,0x6f,0x0,0x6c,0x0,
0x64,0x0,0x0,0x0,0x5,0x0,0x0,0x0,
0x72,0x0,0x65,0x0,0x61,0x0,0x64,0x0,
0x79,0x0,0x0,0x0,0x5,0x0,0x0,0x0,
0x64,0x0,0x69,0x0,0x72,0x0,0x55,0x0,
0x70,0x0,0x0,0x0,0x2,0x0,0x0,0x0,
0x75,0x0,0x70,0x0,0x7,0x0,0x0,0x0,
0x64,0x0,0x69,0x0,0x72,0x0,0x44,0x0,
0x6f,0x0,0x77,0x0,0x6e,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x4,0x0,0x0,0x0,
0x64,0x0,0x6f,0x0,0x77,0x0,0x6e,0x0,
0x0,0x0,0x0,0x0,0x7,0x0,0x0,0x0,
0x64,0x0,0x69,0x0,0x72,0x0,0x4c,0x0,
0x65,0x0,0x66,0x0,0x74,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x4,0x0,0x0,0x0,
0x6c,0x0,0x65,0x0,0x66,0x0,0x74,0x0,
0x0,0x0,0x0,0x0,0x8,0x0,0x0,0x0,
0x64,0x0,0x69,0x0,0x72,0x0,0x52,0x0,
0x69,0x0,0x67,0x0,0x68,0x0,0x74,0x0,
0x0,0x0,0x0,0x0,0x5,0x0,0x0,0x0,
0x72,0x0,0x69,0x0,0x67,0x0,0x68,0x0,
0x74,0x0,0x0,0x0,0x4,0x0,0x0,0x0,
0x6d,0x0,0x6f,0x0,0x76,0x0,0x65,0x0,
0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0,
0x78,0x0,0x0,0x0,0x1,0x0,0x0,0x0,
0x79,0x0,0x0,0x0,0x5,0x0,0x0,0x0,
0x73,0x0,0x77,0x0,0x69,0x0,0x70,0x0,
0x65,0x0,0x0,0x0,0x9,0x0,0x0,0x0,
0x64,0x0,0x69,0x0,0x72,0x0,0x65,0x0,
0x63,0x0,0x74,0x0,0x69,0x0,0x6f,0x0,
0x6e,0x0,0x0,0x0,0x8,0x0,0x0,0x0,
0x64,0x0,0x69,0x0,0x73,0x0,0x74,0x0,
0x61,0x0,0x6e,0x0,0x63,0x0,0x65,0x0,
0x0,0x0,0x0,0x0,0xe,0x0,0x0,0x0,
0x6f,0x0,0x72,0x0,0x69,0x0,0x67,0x0,
0x69,0x0,0x6e,0x0,0x50,0x0,0x6f,0x0,
0x73,0x0,0x69,0x0,0x74,0x0,0x69,0x0,
0x6f,0x0,0x6e,0x0,0x9,0x0,0x0,0x0,
0x6f,0x0,0x6e,0x0,0x50,0x0,0x72,0x0,
0x65,0x0,0x73,0x0,0x73,0x0,0x65,0x0,
0x64,0x0,0x0,0x0,0x18,0x0,0x0,0x0,
0x65,0x0,0x78,0x0,0x70,0x0,0x72,0x0,
0x65,0x0,0x73,0x0,0x73,0x0,0x69,0x0,
0x6f,0x0,0x6e,0x0,0x20,0x0,0x66,0x0,
0x6f,0x0,0x72,0x0,0x20,0x0,0x6f,0x0,
0x6e,0x0,0x50,0x0,0x72,0x0,0x65,0x0,
0x73,0x0,0x73,0x0,0x65,0x0,0x64,0x0,
0x0,0x0,0x0,0x0,0x11,0x0,0x0,0x0,
0x6f,0x0,0x6e,0x0,0x50,0x0,0x6f,0x0,
0x73,0x0,0x69,0x0,0x74,0x0,0x69,0x0,
0x6f,0x0,0x6e,0x0,0x43,0x0,0x68,0x0,
0x61,0x0,0x6e,0x0,0x67,0x0,0x65,0x0,
0x64,0x0,0x0,0x0,0x20,0x0,0x0,0x0,
0x65,0x0,0x78,0x0,0x70,0x0,0x72,0x0,
0x65,0x0,0x73,0x0,0x73,0x0,0x69,0x0,
0x6f,0x0,0x6e,0x0,0x20,0x0,0x66,0x0,
0x6f,0x0,0x72,0x0,0x20,0x0,0x6f,0x0,
0x6e,0x0,0x50,0x0,0x6f,0x0,0x73,0x0,
0x69,0x0,0x74,0x0,0x69,0x0,0x6f,0x0,
0x6e,0x0,0x43,0x0,0x68,0x0,0x61,0x0,
0x6e,0x0,0x67,0x0,0x65,0x0,0x64,0x0,
0x0,0x0,0x0,0x0,0xa,0x0,0x0,0x0,
0x6f,0x0,0x6e,0x0,0x52,0x0,0x65,0x0,
0x6c,0x0,0x65,0x0,0x61,0x0,0x73,0x0,
0x65,0x0,0x64,0x0,0x19,0x0,0x0,0x0,
0x65,0x0,0x78,0x0,0x70,0x0,0x72,0x0,
0x65,0x0,0x73,0x0,0x73,0x0,0x69,0x0,
0x6f,0x0,0x6e,0x0,0x20,0x0,0x66,0x0,
0x6f,0x0,0x72,0x0,0x20,0x0,0x6f,0x0,
0x6e,0x0,0x52,0x0,0x65,0x0,0x6c,0x0,
0x65,0x0,0x61,0x0,0x73,0x0,0x65,0x0,
0x64,0x0,0x0,0x0,0x4,0x0,0x0,0x0,
0x64,0x0,0x72,0x0,0x61,0x0,0x67,0x0,
0x0,0x0,0x0,0x0,0x4,0x0,0x0,0x0,
0x44,0x0,0x72,0x0,0x61,0x0,0x67,0x0,
0x0,0x0,0x0,0x0,0x9,0x0,0x0,0x0,
0x58,0x0,0x41,0x0,0x6e,0x0,0x64,0x0,
0x59,0x0,0x41,0x0,0x78,0x0,0x69,0x0,
0x73,0x0,0x0,0x0,0x4,0x0,0x0,0x0,
0x61,0x0,0x78,0x0,0x69,0x0,0x73,0x0,
0x0,0x0,0x0,0x0,0x2,0x0,0x0,0x0,
0x51,0x0,0x74,0x0,0x5,0x0,0x0,0x0,
0x6d,0x0,0x6f,0x0,0x75,0x0,0x73,0x0,
0x65,0x0,0x0,0x0,0x5,0x0,0x0,0x0,
0x70,0x0,0x6f,0x0,0x69,0x0,0x6e,0x0,
0x74,0x0,0x0,0x0,0x4,0x0,0x0,0x0,
0x4d,0x0,0x61,0x0,0x74,0x0,0x68,0x0,
0x0,0x0,0x0,0x0,0x3,0x0,0x0,0x0,
0x61,0x0,0x62,0x0,0x73,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x5,0x0,0x0,0x0,
0x58,0x0,0x41,0x0,0x78,0x0,0x69,0x0,
0x73,0x0,0x0,0x0,0x5,0x0,0x0,0x0,
0x59,0x0,0x41,0x0,0x78,0x0,0x69,0x0,
0x73,0x0,0x0,0x0,0x8,0x0,0x0,0x0,
0x63,0x0,0x61,0x0,0x6e,0x0,0x63,0x0,
0x65,0x0,0x6c,0x0,0x65,0x0,0x64,0x0,
0x0,0x0,0x0,0x0,0x26,0x0,0x0,0x0,
0x71,0x0,0x72,0x0,0x63,0x0,0x3a,0x0,
0x2f,0x0,0x2f,0x0,0x2f,0x0,0x51,0x0,
0x6d,0x0,0x6c,0x0,0x53,0x0,0x6f,0x0,
0x75,0x0,0x72,0x0,0x63,0x0,0x65,0x0,
0x2f,0x0,0x43,0x0,0x75,0x0,0x73,0x0,
0x74,0x0,0x6f,0x0,0x6d,0x0,0x47,0x0,
0x65,0x0,0x73,0x0,0x74,0x0,0x75,0x0,
0x72,0x0,0x65,0x0,0x41,0x0,0x72,0x0,
0x65,0x0,0x61,0x0,0x2e,0x0,0x71,0x0,
0x6d,0x0,0x6c,0x0,0xd,0x0,0x0,0x0,
0x63,0x0,0x6f,0x0,0x6e,0x0,0x74,0x0,
0x65,0x0,0x78,0x0,0x74,0x0,0x20,0x0,
0x73,0x0,0x63,0x0,0x6f,0x0,0x70,0x0,
0x65,0x0,0x0,0x0,0x18,0x0,0x0,0x0,
0x69,0x0,0x33,0x0,0x38,0x0,0x36,0x0,
0x2d,0x0,0x6c,0x0,0x69,0x0,0x74,0x0,
0x74,0x0,0x6c,0x0,0x65,0x0,0x5f,0x0,
0x65,0x0,0x6e,0x0,0x64,0x0,0x69,0x0,
0x61,0x0,0x6e,0x0,0x2d,0x0,0x69,0x0,
0x6c,0x0,0x70,0x0,0x33,0x0,0x32,0x0,
0x0,0x0,0x0,0x0,0x3,0x0,0x0,0x0,
0x63,0x0,0x70,0x0,0x70,0x0,0x0,0x0,
0x0,0x0,0x0,0x0
};
} // namespace _QmlSource_CustomGestureArea_qml
} // namespace QtQuickCompilerGeneratedModule
