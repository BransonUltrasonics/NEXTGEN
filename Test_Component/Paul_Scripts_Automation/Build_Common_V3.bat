@ECHO OFF
REM (C) 2018 Branson, Inc.
SET EMAIL_BUILD_ORIGINATOR=BuildStatusDetailed@emerson.com
SET DO_NOT_BUILD=0

REM MAIN
@ECHO Starting Build %BUILD_NAME%
date /T
time /T

REM Set the Environment
CALL :SetEnvironment

IF %DO_NOT_BUILD%==1 (
	EXIT /B
)

@TITLE Building %WORKSPACE%
@ECHO Starting Build %BUILD_NAME% %RELEASE_VERSION%
@ECHO Starting Build %BUILD_NAME% %RELEASE_VERSION% on %COMPUTERNAME% >> %RETURN_VALUE_FILE%
date /T >> %RETURN_VALUE_FILE%
time /T >> %RETURN_VALUE_FILE%

REM Build the board which were in the argument list
(for %%a in (%BOARD_TYPE%) do (
	call :BOARD_TYPE_%%a
))

REM Copy Files to target location if all PASSED
CALL :PublishFiles

date /T
time /T

date /T >> %RETURN_VALUE_FILE%
time /T >> %RETURN_VALUE_FILE%
@ECHO Full Build Completed >> %RETURN_VALUE_FILE%
@ECHO Finished Build %BUILD_NAME% %RELEASE_VERSION%

IF %BUILD_COVERITY%==1 (
	CALL %BUILD_SCRIPTS%\Build_Coverity.bat
)

CALL scm logout --repository-uri Jazz

REM Exit the build
EXIT /B


:SetEnvironment
IF NOT DEFINED BOARD_TYPE (
	SET BOARD_TYPE=ALL
)

IF NOT DEFINED DEBUG_BUILD (
	SET DEBUG_BUILD=1
)

IF NOT DEFINED RELEASE_BUILD (
	SET RELEASE_BUILD=0
)

IF NOT DEFINED FORCE_BUILD (
	SET FORCE_BUILD=0
)

IF NOT DEFINED BUILD_COVERITY (
	SET BUILD_COVERITY=0
)

IF NOT DEFINED BUILDING_VSB_VIP (
	SET BUILDING_VSB_VIP=0
)

IF NOT DEFINED COVERITY_PATH (
	SET COVERITY_PATH=C:\Program Files\Coverity\Coverity Static Analysis\bin
)
SET path=%PATH%;%WINDRIVER%\workbench-4;%JAZZ_CMDLINE%;%QTDIR%;%QTTOOLS%;%CYGWIN_BIN%;%COVERITY_PATH%
SET ELC_WORKSPACE=%WORKSPACE%\Encoder_Logic
SET QT_WORKSPACE=%WORKSPACE%\QT_UIController
SET VERSION_COMMON_FILE=%WORKSPACE%\_Branson_User_Common\Commons\version_common.h
SET VERSION_QT_FILE=%WORKSPACE%\QT_UIController\Sources\Header\machinedetails.h
SET VERSION_QT_COMPONENT=QT_UIController
SET VERSION_COMMON_COMPONENT=_Branson_User_Common
SET BUILD_OUTPUT=%WORKSPACE%\BuildOutput
SET BUILD_OUTPUT_CUSTOM=%BUILD_OUTPUT%\Custom
SET BUILD_OUTPUT_RELEASE=%BUILD_OUTPUT_CUSTOM%\Release
SET BUILD_OUTPUT_DEBUG=%BUILD_OUTPUT_CUSTOM%\Debug
SET BUILD_OUTPUT_FIRMWARE=%BUILD_OUTPUT%\Binaries
SET BUILD_OUTPUT_FIRMWARE_RELEASE=%BUILD_OUTPUT_FIRMWARE%\Release_FirmwareUpgrade
SET BUILD_OUTPUT_FIRMWARE_DEBUG=%BUILD_OUTPUT_FIRMWARE%\Debug_FirmwareUpgrade
SET BUILD_OUTPUT_UICONTROLLER=%BUILD_OUTPUT_FIRMWARE%\UIController
SET BUILD_OUTPUT_UICONTROLLER_RUNTIME_RELEASE=%BUILD_OUTPUT%\UIController\Runtime
SET BUILD_OUTPUT_UICONTROLLER_DEBUG=%BUILD_OUTPUT_UICONTROLLER%\Debug
SET BUILD_OUTPUT_UICONTROLLER_RELEASE=%BUILD_OUTPUT_UICONTROLLER%\Release
SET BUILD_OUTPUT_ENCODERLOGIC=%BUILD_OUTPUT_FIRMWARE%\Encoder_Logic
SET BUILD_LOGS_RELEASE=%BUILD_OUTPUT%\BuildLogs_Release
SET BUILD_LOGS_DEBUG=%BUILD_OUTPUT%\BuildLogs_Debug
SET RETURN_VALUE_FILE=%BUILD_OUTPUT%\Return_Values.log
SET VXWORKS_COPY=%BUILD_OUTPUT%\VxWorks-7_Copy.log
SET BSP_LAYER=%WORKSPACE%\_Branson_Driver_Layer\BRANSON_BSP
SET WIND_WRTOOL_WORKSPACE=%WORKSPACE%
SET WIND_BSP_PATHS=%BSP_LAYER%\BSP_4377;%BSP_LAYER%\BSP_5728;%BSP_LAYER%\BSP_IDK;%BSP_LAYER%\BSP_4377\BSP_LBC;
SET WIND_LAYER_PATHS=%WORKSPACE%\_Branson_Driver_Layer
SET EMAIL_CONTENT=%BUILD_OUTPUT%\Email_Content.txt
SET HISTORY_DETAILED_OUTPUT=%BUILD_OUTPUT%\History_Detailed.txt
SET SCM_RETURN_VALUE_FILE=%BUILD_LOGS_DEBUG%\SCM_LOG.txt
SET WRWB_LOG=%BUILD_LOGS_DEBUG%\WRWBProcessList.txt
SET SCM_STATUS_FILE=%TEMP%\scmstatus.txt
SET SCM__COMPONENT_LIST=_Branson_Driver_Layer _Branson_User_Common _Default_vxWorks-7 AM5728_ROMFS AM5728_VIP AM5728_DKM_ECM RTP_SC AM4377_ROMFS AM4377_VIP AM4377_DKM_ESS RTP_AC RTP_PC QT_UIController

SET FWMAJOR_PREVIOUS=0
SET FWMINOR_PREVIOUS=0
SET FWBUILD_PREVIOUS=0
SET FWMAJOR_LATEST=0
SET FWMINOR_LATEST=0
SET FWBUILD_LATEST=0
SET MAKE_DEBUG=0
SET VERSION_COMPONENT=_Branson_User_Common
SET ACTUATION_BUILD="-DACTUATION_CONTROLLER_BUILD"
SET POWER_BUILD="-DPOWER_CONTROLLER_BUILD"
SET POWER_BUILD_OFF="-DxPOWER_CONTROLLER_BUILD"
SET RELEASE_VERSION=Release x.x
SET ERROR_COUNT=0
SET SCM_STATUS_CODE=0

SET SNAPSHOT_LABEL=Daily Build

cd %WORKSPACE%

CALL scm login -r %JAZZ_SERVER% -u %USERNAME% -P %MY_PASS% -n Jazz

IF EXIST %BUILD_OUTPUT% rmdir /s /q %BUILD_OUTPUT%
IF NOT EXIST %BUILD_OUTPUT% mkdir %BUILD_OUTPUT%
IF EXIST del /f /s /q %BUILD_LOGS_DEBUG% >> %BUILD_OUTPUT%\copy.log 2>&1
IF NOT EXIST %BUILD_LOGS_DEBUG% mkdir %BUILD_LOGS_DEBUG% >> %BUILD_OUTPUT%\copy.log 2>&1

IF %DAILY_BUILD%==1 (
	@ECHO Killing WindRiver
	CALL tasklist | grep -i wrwb.exe | gawk '{print $2}' > %TEMP%\wrwbpid.txt
	for /F %%A IN (%TEMP%\wrwbpid.txt) DO (
		CALL cat %TEMP%\wrwbpid.txt >> %WRWB_LOG%
		CALL kill -f %%A >> %WRWB_LOG%
		@ECHO Kill process %%A Error Level: %ERRORLEVEL% >> %WRWB_LOG%
	)

	IF %FORCE_VERSION%==0 (
		CALL :Reload_Project
	)
)
IF %DAILY_BUILD%==1 (
	IF %SCM_STATUS_CODE%==0 (
		IF %FORCE_BUILD%==0 (
			email -f BuildStatus@emerson.com -n "BUILD %BUILD_NAME% From: %COMPUTERNAME%" -b -s "Daily Build Has No Changes!  Exiting!" -r inetmail.emrsn.net %EMAIL_TO_ALL%
			@ECHO Nothing to build!
			date /T
			time /T
			SET DO_NOT_BUILD=1
			EXIT /B
		)
	)
)

CALL :UpdateVerionInformation

IF %RELEASE_BUILD%==1 (
	SET SNAPSHOT_LABEL=%RELEASE_VERSION_SNAPHOT%
)ELSE (
	SET SNAPSHOT_LABEL=Daily_Build
)

REM email -f BuildStatus@emerson.com -n "BUILD %BUILD_NAME% From: %COMPUTERNAME%" -b -s "Build %BUILD_NAME% %RELEASE_VERSION% Started!" -r inetmail.emrsn.net %EMAIL_TO_ALL%

IF EXIST %BUILD_OUTPUT_UICONTROLLER% rmdir /s /q %BUILD_OUTPUT_UICONTROLLER% >> %BUILD_OUTPUT%\copy.log 2>&1
IF EXIST %BUILD_OUTPUT_ENCODERLOGIC% rmdir /s /q %BUILD_OUTPUT_ENCODERLOGIC% >> %BUILD_OUTPUT%\copy.log 2>&1

IF %RELEASE_BUILD%==1 (
	IF NOT EXIST %BUILD_OUTPUT_RELEASE% mkdir %BUILD_OUTPUT_RELEASE% >> %BUILD_OUTPUT%\copy.log 2>&1
	IF NOT EXIST %BUILD_OUTPUT_RELEASE%\AC mkdir %BUILD_OUTPUT_RELEASE%\AC >> %BUILD_OUTPUT%\copy.log 2>&1
	IF NOT EXIST %BUILD_OUTPUT_RELEASE%\SC mkdir %BUILD_OUTPUT_RELEASE%\SC >> %BUILD_OUTPUT%\copy.log 2>&1
	IF NOT EXIST %BUILD_OUTPUT_FIRMWARE% mkdir %BUILD_OUTPUT_FIRMWARE% >> %BUILD_OUTPUT%\copy.log 2>&1
	IF NOT EXIST %BUILD_OUTPUT_FIRMWARE_RELEASE% mkdir %BUILD_OUTPUT_FIRMWARE_RELEASE% >> %BUILD_OUTPUT%\copy.log 2>&1
	IF NOT EXIST %BUILD_OUTPUT_RELEASE%\PC mkdir %BUILD_OUTPUT_RELEASE%\PC >> %BUILD_OUTPUT%\copy.log 2>&1
	IF EXIST del /f /s /q %BUILD_LOGS_RELEASE% >> %BUILD_OUTPUT%\copy.log 2>&1
	IF NOT EXIST %BUILD_LOGS_RELEASE% mkdir %BUILD_LOGS_RELEASE% >> %BUILD_OUTPUT%\copy.log 2>&1
)

IF NOT EXIST %BUILD_OUTPUT_FIRMWARE% mkdir %BUILD_OUTPUT_FIRMWARE% >> %BUILD_OUTPUT%\copy.log 2>&1
IF NOT EXIST %BUILD_OUTPUT_FIRMWARE_DEBUG% mkdir %BUILD_OUTPUT_FIRMWARE_DEBUG% >> %BUILD_OUTPUT%\copy.log 2>&1
IF NOT EXIST %BUILD_OUTPUT_ENCODERLOGIC% mkdir %BUILD_OUTPUT_ENCODERLOGIC% >> %BUILD_OUTPUT%\copy.log 2>&1
IF NOT EXIST %BUILD_OUTPUT_UICONTROLLER% mkdir %BUILD_OUTPUT_UICONTROLLER% >> %BUILD_OUTPUT%\copy.log 2>&1
IF NOT EXIST %BUILD_OUTPUT_UICONTROLLER_RUNTIME_RELEASE% mkdir %BUILD_OUTPUT_UICONTROLLER_RUNTIME_RELEASE% >> %BUILD_OUTPUT%\copy.log 2>&1
IF NOT EXIST %BUILD_OUTPUT_UICONTROLLER_RELEASE% mkdir %BUILD_OUTPUT_UICONTROLLER_RELEASE% >> %BUILD_OUTPUT%\copy.log 2>&1
IF EXIST %EMAIL_CONTENT% del /f /s /q %EMAIL_CONTENT% >> %BUILD_OUTPUT%\copy.log 2>&1

IF %DEBUG_BUILD%==1 (
	IF NOT EXIST %BUILD_OUTPUT_DEBUG% mkdir %BUILD_OUTPUT_DEBUG% >> %BUILD_OUTPUT%\copy.log 2>&1
	IF NOT EXIST %BUILD_OUTPUT_DEBUG%\AC mkdir %BUILD_OUTPUT_DEBUG%\AC >> %BUILD_OUTPUT%\copy.log 2>&1
	IF NOT EXIST %BUILD_OUTPUT_DEBUG%\PC mkdir %BUILD_OUTPUT_DEBUG%\PC >> %BUILD_OUTPUT%\copy.log 2>&1
	IF NOT EXIST %BUILD_OUTPUT_DEBUG%\SC mkdir %BUILD_OUTPUT_DEBUG%\SC >> %BUILD_OUTPUT%\copy.log 2>&1

	xcopy %WORKSPACE%\_Support_Tools\BootStrap\AC %BUILD_OUTPUT_DEBUG%\AC /e /y /s >> %BUILD_OUTPUT%\copy.log 2>&1
	xcopy %WORKSPACE%\_Support_Tools\BootStrap\PC %BUILD_OUTPUT_DEBUG%\PC /e /y /s >> %BUILD_OUTPUT%\copy.log 2>&1
	xcopy %WORKSPACE%\_Support_Tools\BootStrap\SC %BUILD_OUTPUT_DEBUG%\SC /e /y /s >> %BUILD_OUTPUT%\copy.log 2>&1
)

IF %RELEASE_BUILD%==1 (
	xcopy %WORKSPACE%\_Support_Tools\BootStrap\AC %BUILD_OUTPUT_RELEASE%\AC /e /y /s >> %BUILD_OUTPUT%\copy.log 2>&1
	xcopy %WORKSPACE%\_Support_Tools\BootStrap\PC %BUILD_OUTPUT_RELEASE%\PC /e /y /s >> %BUILD_OUTPUT%\copy.log 2>&1
	xcopy %WORKSPACE%\_Support_Tools\BootStrap\SC %BUILD_OUTPUT_RELEASE%\SC /e /y /s >> %BUILD_OUTPUT%\copy.log 2>&1
)

REM This is a special case!!!!!!
xcopy %WORKSPACE%\_Support_Tools\QT_Runtime\Release %BUILD_OUTPUT_UICONTROLLER% /e /y /s >> %BUILD_OUTPUT%\copy.log 2>&1

REM This verifies that all files have been removed and are being copied to the custom syscall folder
del /f /s /q %WINDRIVER%\vxworks-7\pkgs\os\core\syscalls-1.0.13.0\custom >> %BUILD_OUTPUT%\copy.log 2>&1
xcopy %WORKSPACE%\_Default_vxWorks-7\pkgs %WINDRIVER%\vxworks-7\pkgs /e /y /s >> %BUILD_OUTPUT%\copy.log 2>&1

REM xcopy %WORKSPACE%\_Branson_Driver_Layer\BRANSON_BSP\BSP_4377\ti_sitara_ctxa9_branson-1.0.0.0\*.* %WORKSPACE%\AM4377_VIP\ti_sitara_ctxa9_branson_1_0_0_0\ /y >> %BUILD_OUTPUT%\copy.log 2>&1
REM xcopy %WORKSPACE%\_Branson_Driver_Layer\BRANSON_BSP\BSP_5728\ti_sitara_ctxa15_branson-1.0.0.0\*.* %WORKSPACE%\AM5728_VIP\ti_sitara_ctxa15_branson_1_0_0_0 /y >> %BUILD_OUTPUT%\copy.log 2>&1

SET BUILD_DROP_BASE=%BUILD_DROP%\%RELEASE_VERSION_SNAPHOT%
SET BUILD_DROP=%BUILD_DROP_BASE%\Custom

IF %FORCE_VERSION%==0 (
	IF %SNAPSHOT%==1 (
		@ECHO Delivering Updated Version File
		CALL scm checkin --workitem %WORK_ITEM% %VERSION_COMMON_FILE% >> %SCM_RETURN_VALUE_FILE% 2>&1
		CALL scm accept >> %SCM_RETURN_VALUE_FILE% 2>&1
		CALL scm deliver --components %VERSION_COMMON_COMPONENT% >> %SCM_RETURN_VALUE_FILE% 2>&1
		CALL scm checkin --workitem %WORK_ITEM% %VERSION_QT_FILE% >> %SCM_RETURN_VALUE_FILE% 2>&1
		CALL scm accept >> %SCM_RETURN_VALUE_FILE% 2>&1
		CALL scm deliver --components %VERSION_QT_COMPONENT% >> %SCM_RETURN_VALUE_FILE% 2>&1
	
		@ECHO Creating Snapshot %RELEASE_VERSION_SNAPHOT%
		CALL scm create snapshot --description "%RELEASE_VERSION_SNAPHOT%" --forceBaselineCreation --name %RELEASE_VERSION_SNAPHOT% --repository-uri %JAZZ_SERVER% -- "%STREAM_NAME%" >> %SCM_RETURN_VALUE_FILE% 2>&1
		REM >> %SCM_RETURN_VALUE_FILE%
		CALL scm accept --no-merge --overwrite-uncommitted >> %SCM_RETURN_VALUE_FILE% 2>&1
		@ECHO Getting Diffs from previous version "%BUILD_PREVIOUS%" and "%RELEASE_VERSION_SNAPHOT%"
		@ECHO Changes between "%RELEASE_VERSION_SNAPHOT%" and "%BUILD_PREVIOUS%" > %HISTORY_DETAILED_OUTPUT%
		@ECHO. >> %HISTORY_DETAILED_OUTPUT%
		@ECHO. >> %HISTORY_DETAILED_OUTPUT%
		@ECHO. >> %HISTORY_DETAILED_OUTPUT%
		@ECHO. >> %HISTORY_DETAILED_OUTPUT%
		@ECHO. >> %HISTORY_DETAILED_OUTPUT%
		CALL scm compare --include-types bwsf --show cdio snapshot "%RELEASE_VERSION_SNAPHOT%" snapshot "%BUILD_PREVIOUS%" >> %HISTORY_DETAILED_OUTPUT%
		@ECHO. >> %HISTORY_DETAILED_OUTPUT%
		@ECHO. >> %HISTORY_DETAILED_OUTPUT%
		@ECHO. >> %HISTORY_DETAILED_OUTPUT%
		@ECHO. >> %HISTORY_DETAILED_OUTPUT%
		REM @ECHO CALL scm compare -u %USERNAME% -P %MY_PASS% -I bwsf -S cdio snapshot "%RELEASE_VERSION_SNAPHOT%" snapshot "%BUILD_PREVIOUS%"
		REM CALL scm compare -u %USERNAME% -P %MY_PASS% -I bwsf -S cdio snapshot "%RELEASE_VERSION_SNAPHOT%" snapshot "%BUILD_PREVIOUS%"
	)
)

email -f BuildStatus@emerson.com -n "BUILD %BUILD_NAME% From: %COMPUTERNAME%" -b -s "Build %BUILD_NAME% %RELEASE_VERSION% Started!" -r inetmail.emrsn.net %EMAIL_TO_ALL% -a %HISTORY_DETAILED_OUTPUT%

EXIT /B %ERRORLEVEL%


:BOARD_TYPE_ALL
CALL :BOARD_TYPE_AM5728
CALL :BOARD_TYPE_AM4377
CALL :BOARD_TYPE_ELC
CALL :BOARD_TYPE_QT

EXIT /B %ERRORLEVEL%


:BOARD_TYPE_AM5728
CALL :Build_AM5728

EXIT /B %ERRORLEVEL%


:BOARD_TYPE_AM4377
CALL :Build_AM4377

EXIT /B %ERRORLEVEL%


:BOARD_TYPE_ELC
CALL :Build_ELC

EXIT /B %ERRORLEVEL%


:BOARD_TYPE_QT
CALL :Build_QT

EXIT /B %ERRORLEVEL%


:Build_AM5728
SET COMPONENT=AM5728_VSB
IF %BUILD_VSB%==1 (
	SET BUILDING_VSB_VIP=1
	SET MAKE_DEBUG=0
	CALL :Build_Common
	CALL :WRTool_SYNC_VSB
	SET BUILDING_VSB_VIP=0
)ELSE (
	@ECHO Skipping Build %COMPONENT%
)

SET COMPONENT=AM5728_DKM_ECM
IF %DEBUG_BUILD%==1 (
	SET MAKE_DEBUG=1
	CALL :Build_Common
	copy %WORKSPACE%\AM5728_DKM_ECM\AM5728_VSB_ARMARCH7diab_SMP\AM5728_DKM_ECM\Debug\AM5728_DKM_ECM.out %BUILD_OUTPUT_DEBUG%\SC\. /y >> %BUILD_OUTPUT%\copy.log 2>&1
)

IF %RELEASE_BUILD%==1 (
	SET MAKE_DEBUG=0
	CALL :Build_Common
	copy %WORKSPACE%\AM5728_DKM_ECM\AM5728_VSB_ARMARCH7diab_SMP\AM5728_DKM_ECM\NonDebug\AM5728_DKM_ECM.out %BUILD_OUTPUT_RELEASE%\SC\. /y >> %BUILD_OUTPUT%\copy.log 2>&1
)

SET COMPONENT=RTP_SC
IF %DEBUG_BUILD%==1 (
	SET MAKE_DEBUG=1
	CALL :Build_Common
	copy "%WORKSPACE%\RTP_SC\AM5728_VSB_ARMARCH7diab_C++2003\RTP_SC\Debug\RTP_SC.vxe" %BUILD_OUTPUT_DEBUG%\SC\. /y >> %BUILD_OUTPUT%\copy.log 2>&1
)

IF %RELEASE_BUILD%==1 (
	SET MAKE_DEBUG=0
	CALL :Build_Common
	copy "%WORKSPACE%\RTP_SC\AM5728_VSB_ARMARCH7diab_C++2003\RTP_SC\NonDebug\RTP_SC.vxe" %BUILD_OUTPUT_RELEASE%\SC\. /y >> %BUILD_OUTPUT%\copy.log 2>&1
)

SET COMPONENT=AM5728_VIP

IF %DEBUG_BUILD%==1 (
	SET BUILDING_VSB_VIP=1
	SET MAKE_DEBUG=1
	CALL :WRTool_ROMFS_Remove RTP_SC.vxe AM5728_ROMFS
	CALL :WRTool_ROMFS_Remove AM5728_DKM_ECM.out AM5728_ROMFS
	CALL :WRTool_ROMFS_Add %BUILD_OUTPUT_DEBUG%\SC\RTP_SC.vxe AM5728_ROMFS
	CALL :WRTool_ROMFS_Add %BUILD_OUTPUT_DEBUG%\SC\AM5728_DKM_ECM.out AM5728_ROMFS
	CALL :Build_Common
	copy %WORKSPACE%\AM5728_VIP\default\vxWorks.bin %BUILD_OUTPUT_FIRMWARE_DEBUG%\SC_vxWorks_%RELEASE_VERSION_LABEL%_20khz.bin /y >> %BUILD_OUTPUT%\copy.log
	SET BUILDING_VSB_VIP=0
)

IF %RELEASE_BUILD%==1 (
	SET BUILDING_VSB_VIP=1
	SET MAKE_DEBUG=0
	CALL :WRTool_ROMFS_Remove RTP_SC.vxe AM5728_ROMFS
	CALL :WRTool_ROMFS_Remove AM5728_DKM_ECM.out AM5728_ROMFS
	CALL :WRTool_ROMFS_Add %BUILD_OUTPUT_RELEASE%\SC\RTP_SC.vxe AM5728_ROMFS
	CALL :WRTool_ROMFS_Add %BUILD_OUTPUT_RELEASE%\SC\AM5728_DKM_ECM.out AM5728_ROMFS
	CALL :Build_Common
	copy %WORKSPACE%\AM5728_VIP\default\vxWorks.bin %BUILD_OUTPUT_FIRMWARE_RELEASE%\SC_vxWorks_%RELEASE_VERSION_LABEL%_20khz.bin /y >> %BUILD_OUTPUT%\copy.log
	SET BUILDING_VSB_VIP=0
)


EXIT /B %ERRORLEVEL%

:Build_AM4377
SET COMPONENT=AM4377_VSB
IF %BUILD_VSB%==1 (
	SET BUILDING_VSB_VIP=1
	SET MAKE_DEBUG=0
	CALL :Build_Common
	CALL :WRTool_SYNC_VSB
	SET BUILDING_VSB_VIP=0
)ELSE (
	@ECHO Skipping Build %COMPONENT% %1
)

SET COMPONENT=RTP_AC

IF %DEBUG_BUILD%==1 (
	SET MAKE_DEBUG=1
	CALL :Build_Common
	copy "%WORKSPACE%\RTP_AC\AM4377_VSB_ARMARCH7diab_C++2003\RTP_AC\Debug\RTP_AC.vxe" %BUILD_OUTPUT_DEBUG%\AC\. /y >> %BUILD_OUTPUT%\copy.log 2>&1
)

IF %RELEASE_BUILD%==1 (
	SET MAKE_DEBUG=0
	CALL :Build_Common
	copy "%WORKSPACE%\RTP_AC\AM4377_VSB_ARMARCH7diab_C++2003\RTP_AC\NonDebug\RTP_AC.vxe" %BUILD_OUTPUT_RELEASE%\AC\. /y >> %BUILD_OUTPUT%\copy.log 2>&1
)

SET COMPONENT=RTP_PC
IF %DEBUG_BUILD%==1 (
	SET MAKE_DEBUG=1
	CALL :Build_Common
	copy "%WORKSPACE%\RTP_PC\AM4377_VSB_ARMARCH7diab_C++2003\RTP_PC\Debug\RTP_PC.vxe" %BUILD_OUTPUT_DEBUG%\PC\. /y >> %BUILD_OUTPUT%\copy.log 2>&1
)

IF %RELEASE_BUILD%==1 (
	SET MAKE_DEBUG=0
	CALL :Build_Common
	copy "%WORKSPACE%\RTP_PC\AM4377_VSB_ARMARCH7diab_C++2003\RTP_PC\NonDebug\RTP_PC.vxe" %BUILD_OUTPUT_RELEASE%\PC\. /y >> %BUILD_OUTPUT%\copy.log 2>&1
)

SET COMPONENT=AM4377_DKM_ESS
CALL :WRTool_Define remove %POWER_BUILD% %COMPONENT%
CALL :WRTool_Define remove %ACTUATION_BUILD% %COMPONENT%
CALL :WRTool_Define add %ACTUATION_BUILD% %COMPONENT%

IF %DEBUG_BUILD%==1 (
	SET MAKE_DEBUG=1
	CALL :Build_Common AC
	copy %WORKSPACE%\AM4377_DKM_ESS\AM4377_VSB_ARMARCH7diab\AM4377_DKM_ESS\Debug\AM4377_DKM_ESS.out %BUILD_OUTPUT_DEBUG%\AC\. /y >> %BUILD_OUTPUT%\copy.log 2>&1
)

IF %RELEASE_BUILD%==1 (
	SET MAKE_DEBUG=0
	CALL :Build_Common AC
	copy %WORKSPACE%\AM4377_DKM_ESS\AM4377_VSB_ARMARCH7diab\AM4377_DKM_ESS\NonDebug\AM4377_DKM_ESS.out %BUILD_OUTPUT_RELEASE%\AC\. /y >> %BUILD_OUTPUT%\copy.log 2>&1
)

SET COMPONENT=AM4377_VIP
CALL :WRTool_ROMFS_Remove RTP_PC.vxe AM4377_ROMFS

REM Build AC
IF %DEBUG_BUILD%==1 (
	SET BUILDING_VSB_VIP=1
	SET MAKE_DEBUG=1
	CALL :WRTool_ROMFS_Remove RTP_PC.vxe AM4377_ROMFS
	CALL :WRTool_ROMFS_Remove RTP_AC.vxe AM4377_ROMFS
	CALL :WRTool_ROMFS_Remove AM4377_DKM_ESS.out AM4377_ROMFS
	CALL :WRTool_ROMFS_Add %BUILD_OUTPUT_DEBUG%\AC\RTP_AC.vxe AM4377_ROMFS
	CALL :WRTool_ROMFS_Add %BUILD_OUTPUT_DEBUG%\AC\AM4377_DKM_ESS.out AM4377_ROMFS
	CALL :Build_Common AM4377_VIP_AC
	copy %WORKSPACE%\AM4377_VIP\default\vxWorks.bin %BUILD_OUTPUT_FIRMWARE_DEBUG%\AC_vxWorks_%RELEASE_VERSION_LABEL%.bin /y >> %BUILD_OUTPUT%\copy.log
	SET BUILDING_VSB_VIP=0
)

IF %RELEASE_BUILD%==1 (
	SET BUILDING_VSB_VIP=1
	SET MAKE_DEBUG=0
	CALL :WRTool_ROMFS_Remove RTP_PC.vxe AM4377_ROMFS
	CALL :WRTool_ROMFS_Remove RTP_AC.vxe AM4377_ROMFS
	CALL :WRTool_ROMFS_Remove AM4377_DKM_ESS.out AM4377_ROMFS
	CALL :WRTool_ROMFS_Add %BUILD_OUTPUT_RELEASE%\AC\RTP_AC.vxe AM4377_ROMFS
	CALL :WRTool_ROMFS_Add %BUILD_OUTPUT_RELEASE%\AC\AM4377_DKM_ESS.out AM4377_ROMFS
	CALL :Build_Common AM4377_VIP_AC
	copy %WORKSPACE%\AM4377_VIP\default\vxWorks.bin %BUILD_OUTPUT_FIRMWARE_RELEASE%\AC_vxWorks_%RELEASE_VERSION_LABEL%.bin /y >> %BUILD_OUTPUT%\copy.log 2>&1
	SET BUILDING_VSB_VIP=0
)

SET COMPONENT=AM4377_DKM_ESS
CALL :WRTool_Define remove %POWER_BUILD% %COMPONENT%
CALL :WRTool_Define remove %ACTUATION_BUILD% %COMPONENT%
CALL :WRTool_Define add %POWER_BUILD% %COMPONENT%

IF %DEBUG_BUILD%==1 (
	SET MAKE_DEBUG=1
	CALL :Build_Common PC
	copy %WORKSPACE%\AM4377_DKM_ESS\AM4377_VSB_ARMARCH7diab\AM4377_DKM_ESS\Debug\AM4377_DKM_ESS.out %BUILD_OUTPUT_DEBUG%\PC\. /y >> %BUILD_OUTPUT%\copy.log 2>&1
)

IF %RELEASE_BUILD%==0 (
	SET MAKE_DEBUG=0
	CALL :Build_Common PC
	copy %WORKSPACE%\AM4377_DKM_ESS\AM4377_VSB_ARMARCH7diab\AM4377_DKM_ESS\NonDebug\AM4377_DKM_ESS.out %BUILD_OUTPUT_RELEASE%\PC\. /y >> %BUILD_OUTPUT%\copy.log 2>&1
)

CALL :WRTool_Define remove %POWER_BUILD% %COMPONENT%
CALL :WRTool_Define add %ACTUATION_BUILD% %COMPONENT%
CALL :WRTool_Define add %POWER_BUILD_OFF% %COMPONENT%
SET COMPONENT=AM4377_VIP
IF %DEBUG_BUILD%==1 (
	SET BUILDING_VSB_VIP=1
	SET MAKE_DEBUG=1
	CALL :WRTool_ROMFS_Remove RTP_PC.vxe AM4377_ROMFS
	CALL :WRTool_ROMFS_Remove RTP_AC.vxe AM4377_ROMFS
	CALL :WRTool_ROMFS_Remove AM4377_DKM_ESS.out AM4377_ROMFS
	CALL :WRTool_ROMFS_Add %BUILD_OUTPUT_DEBUG%\PC\RTP_PC.vxe AM4377_ROMFS
	CALL :WRTool_ROMFS_Add %BUILD_OUTPUT_DEBUG%\PC\AM4377_DKM_ESS.out AM4377_ROMFS
	CALL :Build_Common AM4377_VIP_PC
	copy %WORKSPACE%\AM4377_VIP\default\vxWorks.bin %BUILD_OUTPUT_FIRMWARE_DEBUG%\PC_vxWorks_%RELEASE_VERSION_LABEL%.bin /y >> %BUILD_OUTPUT%\copy.log
	SET BUILDING_VSB_VIP=0
)

IF %RELEASE_BUILD%==1 (
	SET BUILDING_VSB_VIP=1
	SET MAKE_DEBUG=1
	CALL :WRTool_ROMFS_Remove RTP_PC.vxe AM4377_ROMFS
	CALL :WRTool_ROMFS_Remove RTP_AC.vxe AM4377_ROMFS
	CALL :WRTool_ROMFS_Remove AM4377_DKM_ESS.out AM4377_ROMFS
	CALL :WRTool_ROMFS_Add %BUILD_OUTPUT_RELEASE%\PC\RTP_PC.vxe AM4377_ROMFS
	CALL :WRTool_ROMFS_Add %BUILD_OUTPUT_RELEASE%\PC\AM4377_DKM_ESS.out AM4377_ROMFS	
	CALL :Build_Common AM4377_VIP_PC
	copy %WORKSPACE%\AM4377_VIP\default\vxWorks.bin %BUILD_OUTPUT_FIRMWARE_RELEASE%\PC_vxWorks_%RELEASE_VERSION_LABEL%.bin /y >> %BUILD_OUTPUT%\copy.log
	SET BUILDING_VSB_VIP=0
)


EXIT /B %ERRORLEVEL%
 

:Build_QT
SET COMPONENT=QT_UIController
@ECHO Building %COMPONENT%

SET /A CURRENT_ERROR_LEVEL=0
cd %QT_WORKSPACE%\Sources

IF EXIST %QT_WORKSPACE%\Sources\release rmdir /s /q %QT_WORKSPACE%\Sources\release
IF EXIST %QT_WORKSPACE%\Sources\debug rmdir /s /q %QT_WORKSPACE%\Sources\debug

CALL %QTDIR%\qmake -makefile > %BUILD_LOGS_DEBUG%\%COMPONENT%.log 2>&1

SET /A CURRENT_ERROR_LEVEL+=%ERRORLEVEL%
CALL %QTTOOLS%\mingw32-make -f %QT_WORKSPACE%\Sources\Makefile.Release clean >> %BUILD_LOGS_DEBUG%\%COMPONENT%.log 2>&1
SET /A CURRENT_ERROR_LEVEL+=%ERRORLEVEL%
CALL %QTTOOLS%\mingw32-make -f %QT_WORKSPACE%\Sources\Makefile.Release >> %BUILD_LOGS_DEBUG%\%COMPONENT%.log 2>&1
SET /A CURRENT_ERROR_LEVEL+=%ERRORLEVEL%
REM copy %WORKSPACE%\QT_UIController\Sources\debug\UIController.exe %BUILD_OUTPUT_UICONTROLLER_DEBUG%\. /y >> %BUILD_OUTPUT%\copy.log 2>&1
copy %WORKSPACE%\QT_UIController\Sources\release\UIController.exe %BUILD_OUTPUT_UICONTROLLER%\. /y >> %BUILD_OUTPUT%\copy.log 2>&1

IF %CURRENT_ERROR_LEVEL% LEQ 3 (
	SET /A CURRENT_ERROR_LEVEL=0
)
IF %CURRENT_ERROR_LEVEL%==0 (
	IF %EMAIL_LEVEL% GTR 0 (
		email -f %EMAIL_BUILD_ORIGINATOR% -n "BUILD %BUILD_NAME% %RELEASE_VERSION% From: %COMPUTERNAME%" -b -s "Build Passed %RELEASE_VERSION% QT  - %~1" -r inetmail.emrsn.net %EMAIL_TO%
	)
)ELSE (
	IF %EMAIL_LEVEL% GTR 0 (
		email -f %EMAIL_BUILD_ORIGINATOR% -n "BUILD %BUILD_NAME% %RELEASE_VERSION% From: %COMPUTERNAME%" -b -s "Build FAILED %RELEASE_VERSION% QT  - %~1" -r inetmail.emrsn.net %EMAIL_TO%
	)
)

EXIT /B %CURRENT_ERROR_LEVEL%


:Build_ELC
SET COMPONENT=Encoder_Logic
@ECHO Building %COMPONENT%

SET /A CURRENT_ERROR_LEVEL=0
cd %ELC_WORKSPACE%

CALL cs-make clean > %BUILD_LOGS_DEBUG%\%COMPONENT%.log 2>&1
REM IF %ERRORLEVEL% NEQ 2 (
	REM SET /A CURRENT_ERROR_LEVEL+=%ERRORLEVEL%
REM )
CALL cs-make all >> %BUILD_LOGS_DEBUG%\%COMPONENT%.log 2>&1
SET /A CURRENT_ERROR_LEVEL+=%ERRORLEVEL%

REM +_+_+_+_+_+_+_+
REM This should be in the error handler
REM +_+_+_+_+_+_+_+
copy %WORKSPACE%\Encoder_Logic\IntegrationStep*_c_int.hex %BUILD_OUTPUT_ENCODERLOGIC%\. /y >> %BUILD_OUTPUT%\copy.log 2>&1
copy %WORKSPACE%\Encoder_Logic\En13849_c_int.hex %BUILD_OUTPUT_ENCODERLOGIC%\. /y >> %BUILD_OUTPUT%\copy.log 2>&1
REM +_+_+_+_+_+_+_+
REM NOTE!!!!!!!!!!!
REM +_+_+_+_+_+_+_+


IF %CURRENT_ERROR_LEVEL%==0 (
	IF %EMAIL_LEVEL% GTR 0 (
		email -f %EMAIL_BUILD_ORIGINATOR% -n "BUILD %BUILD_NAME% %RELEASE_VERSION% From: %COMPUTERNAME%" -b -s "Build Passed %RELEASE_VERSION% Encoder Logic!" -r inetmail.emrsn.net %EMAIL_TO%
	)
)ELSE (
	IF %EMAIL_LEVEL% GTR 0 (
		email -f %EMAIL_BUILD_ORIGINATOR% -n "BUILD %BUILD_NAME% %RELEASE_VERSION% From: %COMPUTERNAME%" -b -s "Build FAILED %RELEASE_VERSION% Encoder Logic!" -r inetmail.emrsn.net %EMAIL_TO%
	)
)

EXIT /B %CURRENT_ERROR_LEVEL%


:Build_Common
SET /A CURRENT_ERROR_LEVEL=0


IF %MAKE_DEBUG%==0 (
	SET MAKE_DEBUG_LABEL=Release
)ELSE (
	SET MAKE_DEBUG_LABEL=Debug
)

@ECHO.
@ECHO Building %COMPONENT% %1 %MAKE_DEBUG_LABEL%
time /T

CALL :WRTool_Clean
SET /A CURRENT_ERROR_LEVEL+=%ERRORLEVEL%
CALL :WRTool_Clean
SET /A CURRENT_ERROR_LEVEL+=%ERRORLEVEL%

CALL :WRTool_Build
SET /A CURRENT_ERROR_LEVEL+=%ERRORLEVEL%

date /T >> %RETURN_VALUE_FILE%
time /T >> %RETURN_VALUE_FILE%

@ECHO Current error level: %CURRENT_ERROR_LEVEL%
IF %EMAIL_LEVEL% GTR 0 (
	IF %CURRENT_ERROR_LEVEL%==0 (
		email -f %EMAIL_BUILD_ORIGINATOR% -n "BUILD %BUILD_NAME% %RELEASE_VERSION% From: %COMPUTERNAME%" -b -s "Build Passed %RELEASE_VERSION% %MAKE_DEBUG_LABEL% %COMPONENT% - %~1" -r inetmail.emrsn.net %EMAIL_TO% -a %TEMP%\delme2.txt
	)ELSE (
		email -f %EMAIL_BUILD_ORIGINATOR% -n "BUILD %BUILD_NAME% %RELEASE_VERSION% From: %COMPUTERNAME%" -b -s "Build FAILED %RELEASE_VERSION% %MAKE_DEBUG_LABEL% %COMPONENT% - %~1" -r inetmail.emrsn.net %EMAIL_TO% -a %TEMP%\delme2.txt
	)
)
SET /A ERROR_COUNT+=%CURRENT_ERROR_LEVEL%
time /T
EXIT /B %CURRENT_ERROR_LEVEL%


:WRTool_Clean
REM 2 Args // Component Debug_Mode
IF %MAKE_DEBUG%==1 (
	SET OUTPUT_FOLDER=%BUILD_LOGS_DEBUG%
	IF %BUILDING_VSB_VIP%==0 (
		CALL wrtool prj debugmode set 1 %COMPONENT%
	)
)
IF %MAKE_DEBUG%==0 (
	SET OUTPUT_FOLDER=%BUILD_LOGS_RELEASE%
	IF %BUILDING_VSB_VIP%==0 (
		CALL wrtool prj debugmode set 0 %COMPONENT%
	)
	IF %BUILD_VSB%==1 (
		SET OUTPUT_FOLDER=%BUILD_LOGS_DEBUG%
	)
)
@ECHO CALL wrtool prj clean %COMPONENT% >> %OUTPUT_FOLDER%\wrtool.log 2>&1
CALL wrtool prj clean %COMPONENT% >> %OUTPUT_FOLDER%\%COMPONENT%.log 2>&1
@ECHO Error Code: %ERRORLEVEL%: CALL wrtool prj clean %COMPONENT% >> %OUTPUT_FOLDER%\wrtool.log 2>&1

EXIT /B %ERRORLEVEL%


:WRTool_Build
REM 2 Args // Component Debug_Mode
IF %MAKE_DEBUG%==1 (
	SET OUTPUT_FOLDER=%BUILD_LOGS_DEBUG%
	IF %BUILDING_VSB_VIP%==0 (
		CALL wrtool prj debugmode set 1 %COMPONENT%
	)
)
IF %MAKE_DEBUG%==0 (
	SET OUTPUT_FOLDER=%BUILD_LOGS_RELEASE%
	IF %BUILDING_VSB_VIP%==0 (
		CALL wrtool prj debugmode set 0 %COMPONENT%
	)
	IF %BUILD_VSB%==1 (
		SET OUTPUT_FOLDER=%BUILD_LOGS_DEBUG%
	)
)
CALL wrtool prj build %COMPONENT% >> %OUTPUT_FOLDER%\%COMPONENT%.log 2>&1
@ECHO Error Code: %ERRORLEVEL%: CALL wrtool prj build %COMPONENT% >> %OUTPUT_FOLDER%\%COMPONENT%.log 2>&1

EXIT /B %ERRORLEVEL%


:WRTool_SYNC_VSB
@ECHO CALL wrtool prj context update -vsb %COMPONENT% -toolchain >> %BUILD_OUTPUT%\wrtool.log 2>&1
CALL wrtool prj context update -vsb %COMPONENT% -toolchain >> %BUILD_OUTPUT%\wrtool.log 2>&1
@ECHO Error Code: %ERRORLEVEL%: CALL wrtool prj context update -vsb %COMPONENT% -toolchain >> %BUILD_OUTPUT%\wrtool.log 2>&1

EXIT /B %ERRORLEVEL%


:WRTool_Define
REM 3 Args // Action Argument Component
@ECHO CALL wrtool prj define %1 %2 %3 >> %BUILD_OUTPUT%\wrtool.log 2>&1
CALL timeout /T 4 /NOBREAK > nul 2>&1
CALL wrtool prj define %1 %2 %3 >> %BUILD_OUTPUT%\wrtool.log 2>&1
@ECHO Error Code: %ERRORLEVEL%: CALL wrtool prj define %1 %2 %3 >> %BUILD_OUTPUT%\wrtool.log 2>&1

EXIT /B %ERRORLEVEL%


:WRTool_ROMFS_Add
REM 3 Args // Action File Target
@ECHO CALL wrtool prj romfs add -file %1 %2 >> %BUILD_OUTPUT%\wrtool.log 2>&1
CALL timeout /T 4 /NOBREAK > nul 2>&1
CALL wrtool prj romfs add -file %1 %2 >> %BUILD_OUTPUT%\wrtool.log 2>&1
@ECHO Error Code: %ERRORLEVEL%: CALL wrtool prj romfs add -file %1 %2 >> %BUILD_OUTPUT%\wrtool.log 2>&1

EXIT /B %ERRORLEVEL%


:WRTool_ROMFS_Remove
REM 3 Args // Action File Target
@ECHO CALL wrtool prj romfs remove %1 %2 >> %BUILD_OUTPUT%\wrtool.log 2>&1
CALL timeout /T 4 /NOBREAK > nul 2>&1
CALL wrtool prj romfs remove %1 %2 >> %BUILD_OUTPUT%\wrtool.log 2>&1
@ECHO Error Code: %ERRORLEVEL%: CALL wrtool prj romfs remove %1 %2 >> %BUILD_OUTPUT%\wrtool.log 2>&1

EXIT /B %ERRORLEVEL%


:PublishFiles
IF %SNAPSHOT%==1 (
	IF NOT EXIST %BUILD_DROP_BASE% mkdir %BUILD_DROP_BASE% >> %BUILD_OUTPUT%\copy.log 2>&1
	xcopy %BUILD_OUTPUT_FIRMWARE% %BUILD_DROP_BASE% /e /y /s >> %BUILD_OUTPUT%\copy.log 2>&1
	xcopy %BUILD_OUTPUT% %BUILD_DROP_BASE% /e /y /s >> %BUILD_OUTPUT%\copy.log 2>&1
)

@ECHO Build %RELEASE_VERSION% Completed! >> %EMAIL_CONTENT%
@ECHO. >> %EMAIL_CONTENT%
@ECHO The build can be found here: %BUILD_DROP_BASE% >> %EMAIL_CONTENT%
@ECHO. >> %EMAIL_CONTENT%
@ECHO. >> %EMAIL_CONTENT%
@ECHO Paul >> %EMAIL_CONTENT%

@ECHO Completed Daily Build >> %HISTORY_DETAILED_OUTPUT%

copy %HISTORY_DETAILED_OUTPUT% %BUILD_DROP_BASE% >> %BUILD_OUPTPUT%\copy.log 2>&1
IF %ERROR_COUNT% NEQ 0 (
	email -f BuildStatus@emerson.com -n "BUILD %BUILD_NAME% %RELEASE_VERSION% From: %COMPUTERNAME%" -b -s "Build %RELEASE_VERSION% FAILED!" -r inetmail.emrsn.net %EMAIL_TO_ALL% -a %HISTORY_DETAILED_OUTPUT%< %EMAIL_CONTENT%
) ELSE (	
	email -f BuildStatus@emerson.com -n "BUILD %BUILD_NAME% %RELEASE_VERSION% From: %COMPUTERNAME%" -b -s "Build %RELEASE_VERSION% SUCCEEDED!" -r inetmail.emrsn.net %EMAIL_TO_ALL% -a %HISTORY_DETAILED_OUTPUT%< %EMAIL_CONTENT%
)

@ECHO Error Count: %ERROR_COUNT%

EXIT /B %ERRORLEVEL%


:UpdateVerionInformation
grep SC_FW_VERSION_MAJOR %VERSION_COMMON_FILE% | gawk '{print $3}' > %TEMP%\delme.txt
SET /P FWMAJOR_PREVIOUS=<%TEMP%\delme.txt
grep SC_FW_VERSION_MINOR %VERSION_COMMON_FILE% | gawk '{print $3}' > %TEMP%\delme.txt
SET /P FWMINOR_PREVIOUS=<%TEMP%\delme.txt
grep SC_FW_VERSION_BUILD %VERSION_COMMON_FILE% | gawk '{print $3}' > %TEMP%\delme.txt
SET /P FWBUILD_PREVIOUS=<%TEMP%\delme.txt

SET /A FWBUILD_LATEST=%FWBUILD_PREVIOUS%+1

grep UIC_VERSION_NUM_BUILD %VERSION_QT_FILE% | gawk '{print $3}' > %TEMP%\delme.txt
SET /P UICBUILD_PREVIOUS=<%TEMP%\delme.txt
SET /A UICBUILD_LATEST=%UICBUILD_PREVIOUS%+1

IF %FORCE_VERSION%==1 (
	REM FORCE A SPECIFIC VERSION
	@Echo Forcing Build Version from Stream
	SET /A FWMINOR_LATEST=%FWMINOR_PREVIOUS%
	SET /A FWBUILD_LATEST=%FWBUILD_PREVIOUS%
)

SET BUILD_PREVIOUS=Build_%FWMAJOR_PREVIOUS%.%FWMINOR_PREVIOUS%.%FWBUILD_PREVIOUS%
SET RELEASE_VERSION=Release %FWMAJOR_PREVIOUS%.%FWMINOR_PREVIOUS%.%FWBUILD_LATEST%
SET RELEASE_VERSION_SNAPHOT=Build_%FWMAJOR_PREVIOUS%.%FWMINOR_PREVIOUS%.%FWBUILD_LATEST%
SET RELEASE_VERSION_LABEL=%FWMAJOR_PREVIOUS%.%FWMINOR_PREVIOUS%.%FWBUILD_LATEST%


IF %FORCE_VERSION%==1 (
	EXIT /B %ERRORLEVEL%
)

REM Update the Workspace Version File
sed -i 's/SC_FW_VERSION_BUILD %FWBUILD_PREVIOUS%/SC_FW_VERSION_BUILD %FWBUILD_LATEST%/g' %VERSION_COMMON_FILE% >> %BUILD_OUTPUT%\sed.log 2>&1
sed -i 's/AC_FW_VERSION_BUILD %FWBUILD_PREVIOUS%/AC_FW_VERSION_BUILD %FWBUILD_LATEST%/g' %VERSION_COMMON_FILE% >> %BUILD_OUTPUT%\sed.log 2>&1
sed -i 's/PC_FW_VERSION_BUILD %FWBUILD_PREVIOUS%/PC_FW_VERSION_BUILD %FWBUILD_LATEST%/g' %VERSION_COMMON_FILE% >> %BUILD_OUTPUT%\sed.log 2>&1
sed -i 's/ECM_FW_VERSION_BUILD %FWBUILD_PREVIOUS%/ECM_FW_VERSION_BUILD %FWBUILD_LATEST%/g' %VERSION_COMMON_FILE% >> %BUILD_OUTPUT%\sed.log 2>&1
sed -i 's/ESS_FW_VERSION_BUILD %FWBUILD_PREVIOUS%/ESS_FW_VERSION_BUILD %FWBUILD_LATEST%/g' %VERSION_COMMON_FILE% >> %BUILD_OUTPUT%\sed.log 2>&1

sed -i 's/UIC_VERSION_NUM_BUILD %UICBUILD_PREVIOUS%/UIC_VERSION_NUM_BUILD %UICBUILD_LATEST%/g' %VERSION_QT_FILE% >> %BUILD_OUTPUT%\sed.log 2>&1

EXIT /B %ERRORLEVEL%


:Reload_Project
@ECHO.
@ECHO Getting SCM Status
time /t

CALL scm show status > %SCM_STATUS_FILE% 
CALL grep "Change sets" %SCM_STATUS_FILE% | gawk '{print $0}' | wc -l > %TEMP%\delme.txt
SET /P SCM_STATUS_CODE=<%TEMP%\delme.txt
IF %FORCE_BUILD%==0 (
	IF %SCM_STATUS_CODE%==0 (
		exit /b
	)
)
@ECHO Reloading SCM Components
CALL grep Workspace %SCM_STATUS_FILE% | gawk '{print $2}' > %TEMP%\delme.txt
SET /P ID_TEMP=< %TEMP%\delme.txt
SET /A WORKSPACE_ID=%ID_TEMP%
SET ID_LIST=

(for %%a in (%SCM__COMPONENT_LIST%) do (
	CALL :Reload_Project_Worker %%a
))

CALL :Verify_No_Incoming

time /t 
@ECHO.

EXIT /B %ERRORLEVEL%


:Reload_Project_Worker 
CALL grep %1 %SCM_STATUS_FILE% | grep Component | gawk '{print $2}' > %TEMP%\delme.txt
SET /P ID_TEMP=< %TEMP%\delme.txt
SET /A COMPONENT_ID=%ID_TEMP%
@ECHO Reloading %1
CALL timeout /T 8 /NOBREAK > nul 2>&1
CALL scm load --force %WORKSPACE_ID% %COMPONENT_ID% >> %SCM_RETURN_VALUE_FILE% 2>&1
CALL timeout /T 8 /NOBREAK > nul 2>&1

EXIT /B %ERRORLEVEL%


:Verify_No_Incoming
EXIT /B