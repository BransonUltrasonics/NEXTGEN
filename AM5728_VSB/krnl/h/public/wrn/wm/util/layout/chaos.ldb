; $Header: /usr/cvsroot/target/h/wrn/wm/util/layout/chaos.ldb,v 1.1.1.1 2001/11/05 17:47:19 tneale Exp $
; Layout information for CHAOS

;****************************************************************************
;
;  *** Restricted Rights Legend ***
;
;  The programs and information contained herein are licensed only
;  pursuant to a license agreement that contains use, reverse
;  engineering, disclosure, and other restrictions; accordingly, it
;  is "Unpublished--all rights reserved under the applicable
;  copyright laws".
;
;  Use duplication, or disclosure by the Government is subject to
;  restrictions as set forth in subparagraph (c)(1)(ii) of the Rights
;  in Technical Data and Computer Licensed Programs clause of DFARS
;  52.227 7013.
;
;  Copyright 2000-2001 Wind River Systems, Inc.
;  Copyright 1995-1997 Epilogue Technology Corporation.
;  Copyright 1998 Integrated Systems, Inc.
;  All rights reserved.
;
;  *** Government Use ***
;
;  The Licensed Programs and their documentation were developed at
;  private expense and no part of them is in the public domain.
;
;  The Licensed Programs are "Restricted Computer Software" as that
;  term is defined in Clause 52.227-19 of the Federal Acquisition
;  Regulations (FAR) and are "Commercial Computer Software" as that
;  term is defined in Subpart 227.401 of the Department of Defense
;  Federal Acquisition Regulation Supplement (DFARS).
;
;  (i) If the licensed Programs are supplied to the Department of
;      Defense (DoD), the Licensed Programs are classified as
;      "Commercial Computer Software" and the Government is acquiring
;      only "restricted rights" in the Licensed Programs and their
;      documentation as that term is defined in Clause 52.227
;      7013(c)(1) of the DFARS, and
;
;  (ii) If the Licensed Programs are supplied to any unit or agency
;      of the United States Government other than DoD, the
;      Government's rights in the Licensed Programs and their
;      documentation will be as defined in Clause 52.227-19(c)(2) of
;      the FAR.
;****************************************************************************

;  $Log: chaos.ldb,v $
;  Revision 1.1.1.1  2001/11/05 17:47:19  tneale
;  Tornado shuffle
;
;  Revision 1.8  2001/01/19 22:22:32  paul
;  Update copyright.
;
;  Revision 1.7  1998/02/25 15:21:39  sra
;  Finish moving types.h, bug.h, and bugdef.h to common/h/.
;
;  Revision 1.6  1998/02/25 04:53:52  sra
;  Update copyrights.
;
;  Revision 1.5  1997/09/26 20:21:14  alan
;  Use features of new layout compiler: `use-layouts' and `C-include'.
;
;  Revision 1.4  1997/06/04 05:46:21  alan
;  Fix RCS keywords.
;
;  Revision 1.3  1997/06/03 22:59:31  alan
;  Use `define-rcs-info'.
;
;  Revision 1.2  1997/04/22 00:18:31  alan
;  Fix copyright.
;
;  Revision 1.1  1997/04/19 04:12:12  alan
;  Move all .ldb files into the `layout' directory.
;
;  Revision 1.3  1995/06/05 19:48:22  alan
;  Be consistently littlendian.  Unfortunately this breaks the ".h" file until
;  a better theory of endianness come along.
;
;  Revision 1.2  1995/05/25  23:53:32  alan
;  Some enums have a `base' attribute -- some other tweaking.
;
;  Revision 1.1  1995/05/23  07:16:56  alan
;  Basic network layouts.

(define-rcs-info "$Id: chaos.ldb,v 1.1.1.1 2001/11/05 17:47:19 tneale Exp $")

(C-include EPILOGUE_INSTALL_H <install.h>)
(C-include EPILOGUE_TYPES_H <common/h/types.h>)
(C-include EPILOGUE_LAYOUT_LDBGLUE_H <layout/ldbglue.h>)

(define-layout CHAOS_ADDRESS
  (union (size 16)
	 (field OPAQUE (opaque 16))
	 (struct (size 16)
		 (field HOST (unsigned-8bit-little 8))
		 (field SUBNET (unsigned-8bit-little 8)))))

(define-layout CHAOS_PACKET
  (struct (size (* 8 16))
	  (align 16)
	  (struct (align 8)
		  (fill 8)
		  (field OPCODE
			 (enum (type (unsigned-8bit-little 8))
			       (base 8)
			       (value RFC 1) (value OPN 2) (value CLS 3)
			       (value FWD 4) (value ANS 5) (value SNS 6)
			       (value STS 7) (value RUT 8) (value LOS 9)
			       (value LSN 10) (value MNT 11) (value EOF 12)
			       (value UNC 13) (value BRD 14)
			       (value DATA08 #o200)
			       (value DATA16 #o300)
			       )))
	  (struct (align 4)
		  ;; There should be a better theory of endianness used
		  ;; here.  The current kludge actually makes these two
		  ;; fields unusable from C...
		  (field DATA_COUNT (unsigned-8bit-little 12))
		  (field FORWARDING_COUNT (unsigned-8bit-little 4)))
	  (field DESTINATION_ADDRESS CHAOS_ADDRESS)
	  (field DESTINATION_INDEX (opaque 16))
	  (field SOURCE_ADDRESS CHAOS_ADDRESS)
	  (field SOURCE_INDEX (opaque 16))
	  (field PACKET_NUMBER (unsigned-8bit-little 16))
	  (field ACKNOWLEDGMENT (unsigned-8bit-little 16))
	  (union (field DATA08
			(array (count 0) (type (unsigned-8bit-little 8))))
		 (field DATA16
			(array (count 0) (type (unsigned-8bit-little 16)))))))

; Local Variables:
; mode: Scheme
; End:
