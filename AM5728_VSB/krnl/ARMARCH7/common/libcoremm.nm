
libcoremm.a:

memFuncBind.o:
00000004 C _func_memalign
00000004 C _func_valloc
00000004 C __rta_longjmp
00000004 C _func_signalMmanHook
00000004 C _func_memPartCacheFree
00000004 C _func_memPartCacheInfoGet
00000004 C _func_memPartCacheAlloc

pmapBaseLib.o:
00000000 d defaultMmuAttrCacheSpl
00000000 T pmapBaseLibInit
         U vmInfoGet
00000040 T pmapGlobalMap
         U vmPageSizeGet
00000004 C pmapLibFuncs
         U __udiv32
00000004 C pmapVirtPgPoolId
         U pgPoolVirtAlloc
         U vmPageMap
00000144 T pmapGlobalUnmap
         U vmPageUnmap
         U pgPoolVirtFree
0000020c T pmapPrivateMap
00000240 T pmapPrivateUnmap
00000274 T pmapGlobalPhysAlignedAlloc
         U memalign
         U vmStateSet
         U free
00000334 T pmapGlobalPhysAlignedFree
         U mmuDataNoExec
00000400 T pmapPrivatePhysAlignedAlloc
00000434 T pmapPrivatePhysAlignedFree

taskMemFuncBind.o:
00000004 C _func_taskMemCtxSwitch
00000004 C _func_taskStackAlloc
00000004 C _func_taskStackFree

vmBind.o:
00000004 C _func_virtSegInfoGet
00000004 C _func_virtExtraMapInfoGet
00000004 C _func_taskMmuCurrentSet
00000000 D vmLibInfo
00000038 D mmuArchCopySize
0000003c D mmuDataNoExec
00000040 D vmIsSRWXURWXSupported

userReservedMem.o:
00000004 b userReservedSize
00000000 b userReservedAddr
00000000 T userReservedMemInit
         U sysMemDescGet
         U vmLibInfo
         U __errno
         U pmapGlobalMap
         U sysStartType
         U bfill
000000f8 T userReservedGet

memLib.o:
0000021c t memPartReallocInternal
000008b4 t memPartBlockError
00000860 t memPartAllocError
00000000 T memInit
000001c4 T valloc
         U _func_valloc
000001b4 T memalign
         U _func_memalign
         U _func_memPartReallocInternal
0000076c T memPartRealloc
         U _func_memPartRealloc
         U memPartBlockErrorRtn
         U memPartAllocErrorRtn
         U memPartOptionsDefault
         U memPartLibInit
0000006c T memPartOptionsSet
         U memPartVerifiedLock
         U memSysPartId
         U vxAtomic32Dec
         U kernelLockTake
         U windPendQGet
         U windExit
         U semMGive
0000012c T memPartOptionsGet
         U memPartAlignedAlloc
         U vmLibInfo
         U __errno
         U allocChunkEndGuardSize
         U memPartFree
         U memPartAlloc
         U semMTake
         U memPartBlockIsValid
         U memMsgBlockError
         U memPartEdrErrorInject
         U taskIdSelf
         U taskSuspend
         U sizeNodesAlloc
         U bcopy
         U memPartDeleteFree
         U memPartInsertFree
         U evtAction
         U memPartClassId
         U eventPointSwHandle
         U memPartClassLock
         U spinLockIsrTake
         U objVerify
         U spinLockIsrGive
         U vxAtomic32Inc
         U _func_logMsg
         U memMsgBlockTooBig
00000914 T memOptionsSet
00000924 T memOptionsGet
00000934 T memPartHooksInstall
000009d0 T memPartBlockValidate

memPartLib.o:
00000048 b memPartLibInstalled
0000087c t memPartDestroy
00000210 t memPartBlkAlignedAlloc
000005c4 t memPartAddToPoolInternal
000000a0 d _func_memPartCreateHook
00000d38 t memPartAlignedAllocInternal
00001124 t memPartFreeInternal
00001004 t memPartFreeDoWork
000018c8 t memPartBlkAllocN
00000000 b memPartClass
00000000 T memPartLibInit
00000000 D memPartClassId
         U classInit
00000008 D memDefaultAlignment
         U strlen
         U sysExcMsg
         U snprintf
         U edrErrorInjectStub
         U edrInitFatalPolicyHandler
000000e8 T memPartInsertFree
         U avlUintSearch
         U avlUintInsert
00000190 T memPartDeleteFree
         U avlUintDelete
00000018 D allocChunkEndGuardSize
         U avlUintSuccessorGet
0000045c T sizeNodesAlloc
         U __errno
         U evtAction
         U eventPointSwHandle
         U sllPutAtTail
00000790 T memPartInit
         U bfill
00000014 D memPartOptionsDefault
         U sllInit
         U semMInit
         U objCoreInit
         U qPriListClassId
         U qPriListInit
         U objOwnerSetBase
0000001c D _func_memPartReallocInternal
0000002c D memPartClassLock
         U spinLockIsrTake
         U objVerify
         U spinLockIsrGive
         U objCoreInvalidate
         U semMTake
         U vxAtomic32Dec
         U semMGive
         U kernelLockTake
         U windPendQPut
         U windExit
         U vxAtomic32Get
         U semTerminate
         U objCoreTerminate
         U objFree
000009e0 T memPartCreate
         U objAlloc
00000a74 T memPartDelete
00000a7c T memPartVerifiedLock
00000004 D memSysPartId
         U vxAtomic32Inc
         U windPendQGet
00000b70 T memPartAddToPool
00000c14 T memPartEdrErrorInject
         U _sigCtxSave
         U sprintf
         U taskIdSelf
         U edrKernelFatalPolicyHandler
00000010 D memPartAllocErrorRtn
         U errnoSet
00000024 D memMsgBlockTooBig
         U taskTcb
         U taskSuspend
00000ef4 T memPartAlignedAlloc
00000ff8 T memPartAlloc
00001094 T memPartBlockIsValid
0000000c D memPartBlockErrorRtn
00000028 D memMsgBlockError
000012fc T memPartFree
000013e4 T memAddToPool
000013f8 T malloc
         U _func_memPartCacheAlloc
0000147c T calloc
         U bzero
000014f8 T realloc
00000020 D _func_memPartRealloc
         U _func_memPartCacheFree
         U bcopy
00001764 T free
000017d4 T cfree
00001828 T memPartCreateHookSet
0000186c T memBlockSizeGet
00001888 T memPartGrowRtnSet
00001bfc T memPartAllocN
00001de8 T memPartFreeN
00000008 C memSysPartition

poolLib.o:
00000000 b poolListMutex
0000000c t poolBlockBuild
000000ec t poolPartIdGet
00000570 t poolBlockIsFree
000007cc t poolItemIsValid
00000000 T poolLibInit
         U semMInit
         U memPartAlignedAlloc
         U memPartAlloc
         U dllAdd
         U memSysPartId
         U memPartClassId
         U objVerify
         U kProxHeapPartId
00000128 T poolInitialize
         U dllInit
         U semMTake
00000000 D poolListGbl
         U semMGive
         U semTerminate
         U dllGet
         U memPartFree
00000254 T poolCreate
         U __errno
0000030c T poolDelete
         U dllRemove
00000460 T poolBlockAdd
         U __div32
00000544 T poolFindItem
000005c8 T poolUnusedBlocksFree
000006e8 T poolItemGet
         U intContext
         U __udiv32
00000844 T poolItemReturn
00000940 T poolIncrementSet
00000978 T poolIncrementGet
000009ac T poolTotalCount
000009e0 T poolFreeCount
00000a14 T poolIdListGet

taskMemLib.o:
00000000 d stackGuardPages
00000000 b vmInfo
00000004 d nonExecutableStack
00000008 d taskMemLibInitialized
00000000 T taskMemLibInit
         U vmInfoGet
00000084 T taskStackAlloc
         U _func_taskStackAlloc
0000044c T taskStackFree
         U _func_taskStackFree
00000058 T taskStackGuardPageEnable
0000006c T taskStackNoExecEnable
         U taskIdSelf
         U kernelId
         U vmPageSizeGet
         U memalign
         U __udiv32
         U _func_pgMgrPageAlloc
         U _func_pgMgrPageMap
         U _func_pgMgrPageFree
         U vmKernelContextIdGet
         U vmStateSet
         U free
         U mmuDataNoExec
         U _func_taskMemCtxSwitch

memPartCacheLib.o:
000003fc t memPartCacheAlloc
00000534 t memPartCacheFree
00000068 t memPartCacheCreateInternal
0000020c t memPartCacheDelete
00000138 t memPartCachePop
0000018c t memPartCacheFlush
0000024c t memPartCacheBinIndexGet
00000000 d binIx
00000021 d binSizes
00000280 t memPartCachePush
00000000 T memPartCacheLibInit
         U _func_memPartCacheAlloc
         U _func_memPartCacheFree
         U taskCreateHookAdd
         U taskDeleteHookAdd
         U taskTcb
         U calloc
00000120 T memPartCacheCreate
         U taskIdSelf
         U memSysPartId
         U memPartFree
         U free
00000270 T memPartCacheBinSizeGet
         U ffs32Lsb
         U memDefaultAlignment
         U vxKernelVars
         U vxCpuIndexGet
         U memPartAllocN
         U memBlockSizeGet
         U memPartBlockIsValid
         U __errno
         U memPartBlockErrorRtn
         U memPartEdrErrorInject
         U taskSuspend
         U memPartFreeN

memEdrLib.o:
00000160 d initialized.5
000003ac t memEdrPartCreateHook
00001a8c t memEdrTaskCreateHook
00001ad0 t memEdrTaskDeleteHook
00000038 d memEdrBlockMdNames
00000020 b memEdrkProxHeapPart
00000000 b memEdrHeapPart
000016b4 t memEdrReallocHook
000017d4 t memEdrPartDeleteHook
0000092c t memEdrAllocHook
000015d8 t memEdrFreeHook
000004c4 t memEdrCheckPartitionStatus
00000148 d messages.408
000005c0 t memEdrFreePatternValidate
000006c4 t memEdrFreeQueuePartFlush
0000085c t memEdrTrace
00001b50 t memEdrTrcPcValidate
00000e98 t memEdrFreeAndCopy
00000075 d unknownErrorMsg
0000008c d freeErrorMsg
000000a8 d globalErrorMsg
000000c7 d partitionErrorMsg
0000004c d stackErrorMsg
000000ed d allocatedErrorMsg
00000114 d invalidErrorMsg
000019a8 t memEdrBlockMatch
00001b40 t memEdrLocalReturn
00001c98 t memPartInfoCallback
00001d58 t memEdrBlkInfoCallback
00001f94 t memEdrBlkMarkCallback
00000000 T memEdrConfigInit
00000008 C memEdrDb
         U dllInit
         U memPartCreateHookSet
0000006c T memEdrMemInit
         U semMInit
         U cacheArchAlignSize
         U __udiv32
         U poolCreate
         U taskCreateHookAdd
         U taskDeleteHookAdd
         U taskIdSelf
00000004 C edrRootTaskInfo
00000178 T memEdrConfigClear
         U memPartHooksInstall
         U poolDelete
         U taskCreateHookDelete
         U taskDeleteHookDelete
000001f8 T memEdrErrorLog
         U __errno
         U snprintf
         U _sigCtxSave
         U edrErrorInjectStub
         U edrKernelFatalPolicyHandler
00000380 T memEdrItemGet
         U poolItemGet
         U kProxHeapPartition
         U semTake
         U semGive
00000008 D memEdrPoolErrMsg
         U dllAdd
         U dllGet
         U dllRemove
         U avlUintDelete
         U poolItemReturn
000007c8 T memEdrBlockFind
         U avlUintPredecessorGet
         U trcLibFuncs
         U memPartOptionsGet
         U memPartOptionsSet
         U taskTcb
         U bfill
         U avlUintInsert
         U memPartBlockValidate
00000004 D _func_rtcUncache
         U bcopy
         U kernelId
         U memPartBlockErrorRtn
         U taskSuspend
         U avlUintTreeWalk
000019e0 T memEdrFreeQueueFlush
000019ec T memEdrLocalFind
         U taskStackAllot
         U wrs_kernel_text_start
         U memPoolEndAdrs
         U vmLibInfo
         U vxMemProbe
00001bbc T memEdrPartInfoGet
00001cfc T memEdrBlockInfoGet
00001f20 T memEdrBlockMark
00000000 D memEdrEnable

memEdrRtc.o:
00000b44 t memEdrUncache
000009bc t memEdrDropStack
00000000 d rtcInitialized
00000000 b memEdrCache
00000000 T __rtc_init
         U _func_rtcUncache
         U __rta_longjmp
00000038 T __rtc_incl_auto
         U memEdrDb
         U intContext
         U kernelLockOwnedByMe
         U taskIdSelf
         U memEdrLocalFind
         U memEdrErrorLog
         U semTake
         U memEdrItemGet
         U semGive
         U memEdrPoolErrMsg
         U avlUintInsert
00000298 T __rtc_excl_auto
         U avlUintDelete
         U poolItemReturn
00000344 T __rtc_incl_auto0
0000034c T __rtc_excl_auto0
00000354 T __rtc_incl_mem
         U memEdrBlockFind
000004cc T __rtc_excl_mem
000005b4 T __rtc_chk_at
00000934 T __rtc_chk
0000095c T __rtc_inc_op_at
00000988 T __rtc_op_inc_at
         U avlUintMinimumGet

memEdrShow.o:
00000000 T memEdrShowInit
         U memEdrShowUtilInit
00000004 T memEdrPartShow
         U memEdrPartHdrPrint
         U memEdrPartInfoGet
         U printf
         U memEdrPartInfoPrint
00000060 T memEdrBlockShow
         U memEdrBlockHdrPrint
         U memEdrBlockInfoGet
         U kernelId
         U memEdrBlockInfoPrint
         U memEdrUserStopGet

memEdrShowUtil.o:
00000000 t memEdrTaskRegister
00000004 b taskRegistryPool
00000000 b memEdrTaskList
0000004c d showUtilInitialized.8
00000100 t memEdrTaskUidRegister
00000150 t memEdrTaskNameGet
00000048 d errName.30
0000026c t memEdrSymNameGet
00000028 d partStatNames
00000000 d blkMdNames
         U poolItemGet
         U taskName
         U strncpy
0000007c T memEdrShowUtilInit
         U poolCreate
         U taskIdSelf
         U taskDeleteHookAdd
         U taskCreateHookAdd
000001b8 T memEdrTaskUidGet
         U vxAtomic32Add
         U evtAction
         U taskClassId
         U objVerify
         U taskCpuUnlock
         U eventPointSwHandle
         U kernelId
         U objClassIdGet
         U sysSymTbl
         U _func_symFindSymbol
         U _func_symNameGet
         U _func_symValueGet
         U cplusDemangle
000003a0 T memEdrUserStopGet
         U printf
         U read
00000410 T memEdrPartInfoPrint
00000448 T memEdrBlockInfoPrint
         U _func_objHandleToObjId
000005e8 T memEdrPartHdrPrint
000005f0 T memEdrBlockHdrPrint

memInfo.o:
00000000 T memInfoInit
00000008 T memPartInfoGet
         U memPartVerifiedLock
         U avlUintMaximumGet
         U allocChunkEndGuardSize
         U memSysPartId
         U vxAtomic32Dec
         U kernelLockTake
         U windPendQGet
         U windExit
         U semMGive
000000e4 T memPartFindMax
00000178 T memInfoGet
00000188 T memFindMax
00000194 T memPartFreeListWalk
         U avlUintPredecessorGet
         U avlUintSuccessorGet

memPartCacheShow.o:
00000244 t memPartCacheInfoGet
00000000 T memPartCacheShowInit
         U _func_memPartCacheInfoGet
00000014 T memPartCacheShow
         U _func_memPartCacheAlloc
         U printf
         U taskIdListGet
         U taskIdListSort
         U taskName
         U strncpy
         U strlen
         U memPartCacheBinSizeGet
         U taskTcb

memShow.o:
00000010 t memPartOptionsPrint
000000a4 t memPartFreeListGet
000005f0 t memPartSizeNodeInfoGet
000000fc t memPartSectionListGet
00000134 t memPartFreeListPrint
00000000 T memShowInit
         U memPartClassId
00000244 T memPartShow
         U classShowConnect
         U printf
         U avlUintTreeWalk
         U memPartVerifiedLock
         U memPartInfoGet
         U memPartOptionsGet
         U memSysPartId
         U vxAtomic32Dec
         U kernelLockTake
         U windPendQGet
         U windExit
         U semMGive
         U __udiv32
         U __udiv64
         U _func_memPartCacheInfoGet
000005e0 T memShow

poolShow.o:
00000000 t poolShowAll
00000074 t poolBlockFreeCountGet
00000000 d optionStrings
         U poolIdListGet
         U printf
         U poolFindItem
000000d8 T poolShow
         U dllCount
         U __udiv32
         U semMTake
         U semMGive

adrSpaceFuncBind.o:
00000004 C _func_adrSpacePageAllocDirect
00000004 C _func_adrSpacePageFreeDirect
00000004 C _func_adrSpaceDirectBaseGet
00000004 C _func_adrSpaceDirectSizeGet
00000000 D lowestRAMAddress
00000008 D highestRAMAddress

adrSpaceLib.o:
00000000 b kernelSysMemDesc
00000020 b shmRgnPgPool
000007b0 t adrSpacePhysFree
00000c4c t adrSpacePhysBlockRelease
00000000 T adrSpaceLibInit
         U vmPageSizeGet
00000000 D rtpCodeStart
00000004 D rtpCodeSize
00000008 C globalRAMPgPool
         U pgPoolInit
00000004 C globalRAMPgPoolId
         U sysMemDescGet
         U __udiv32
         U pgPoolPhysAddToPool
         U memPoolEndAdrs
00000004 C pAsMemDesc
00000004 C asMemDescNumEnt
         U pgPoolPhysAllocAt
         U lowestRAMAddress
         U highestRAMAddress
00000008 C kernelVirtPgPool
00000004 C kernelVirtPgPoolId
         U pgPoolVirtBaseSet
         U pgPoolVirtAddToPool
00000004 C shmRgnPgPoolId
         U sysExcMsg
         U sprintf
         U __errno
0000038c T adrSpaceRAMAddToPool
00000438 T adrSpaceInfoGet
         U pgPoolInfoGet
00000530 T adrSpaceIsOverlapped
00000538 T adrSpaceRAMReserve
         U pgPoolPhysAlloc
000005ec T adrSpaceVirtReserve
         U pgPoolVirtAlloc
         U pgPoolVirtAllocAt
0000066c T adrSpaceOptimizedSizeGet
         U vmOptimizedSizeGet
         U __udiv64
         U vmContigBlockEach
000007f4 T adrSpacePageMap
         U vmLibInfo
         U pgPoolPhysRangeVerify
         U vmPgMap
         U pgPoolPhysFree
         U pgPoolPhysAlignedAlloc
         U pgPoolPhysAvailAlloc
00000bcc T adrSpacePageUnmap
         U vmPgUnMap
         U pgPoolPhysRangeIsAllocated
00000cd8 T adrSpacePageAlloc
         U mmuLibFuncs
         U _func_adrSpacePageAllocDirect
         U pgPoolVirtAlignedAlloc
         U pgPoolVirtFree
00000ec4 T adrSpacePageFree
         U _func_adrSpacePageFreeDirect

pgMgrBaseLib.o:
00000000 d defaultMmuAttrCacheSpl
00000000 b kernelPgMgr
00000170 t pgMgrMmuAttrUpdate
00000000 T pgMgrInit
         U globalRAMPgPoolId
00000028 T pgMgrBaseLibInit
         U vmInfoGet
000002f0 T pgMgrPageAlloc
         U _func_pgMgrPageAlloc
00000314 T pgMgrPageMap
         U _func_pgMgrPageMap
000000cc T pgMgrPageFree
         U _func_pgMgrPageFree
         U vmKernelContextIdGet
         U kernelVirtPgPoolId
         U kernelId
         U pgPoolVirtRangeIsAllocated
         U __errno
         U adrSpacePageUnmap
         U vxAtomicSub
         U pgPoolVirtFree
000001bc T pgMgrPageAllocAt
         U pgPoolVirtAlloc
         U pgPoolVirtAllocAt
         U adrSpacePageMap
         U vxAtomicAdd
000003d0 T pgMgrPageUnmap
00000444 T pgMgrPageAttrSet
         U vmPageSizeGet
         U vmStateSet
000004d8 T pgMgrPageAttrGet
         U vmStateGet
000004e0 T pgMgrInfoGet
         U pgPoolInfoGet

pgMgrFuncBind.o:
00000004 C _func_pgMgrPageAlloc
00000004 C _func_pgMgrPageMap
00000004 C _func_pgMgrPageFree
00000004 C _func_pgMgrOverlapIterate

pgPoolLib.o:
00000008 b nodePool
00000000 b nodePoolId
000000c8 b initialNodes
00000000 d mutexOptionsPgPoolLib
00000e64 t pgPoolNodeReturnCallback
0000024c t pgPoolInsertFree
000002dc t pgPoolDeleteFree
0000033c t pgPoolRangeStateSet
00000000 T pgPoolLibInit
         U kProxHeapPartId
         U poolInitialize
         U poolBlockAdd
00000078 T pgPoolInit
         U __errno
         U semMInit
         U kernelId
         U objOwnerSetBase
         U ffsMsb
00000168 T pgPoolCreate
         U malloc
         U free
000001b4 T pgPoolDelete
         U semTake
         U avlUintTreeWalk
         U semTerminate
         U avlUintSearch
         U poolItemGet
         U avlUintInsert
         U avlUintDelete
         U poolItemReturn
         U avlUintPredecessorGet
         U avlUintSuccessorGet
000005f0 T pgPoolAddToPool
         U semGive
00000750 T pgPoolRemoveFromPool
00000858 T pgPoolAlignedAlloc
00000928 T pgPoolAllocAt
00000a28 T pgPoolAvailAlloc
         U avlUintMaximumGet
00000afc T pgPoolFree
00000be8 T pgPoolRangeStateCheck
00000c78 T pgPoolRangeVerify
00000d0c T pgPoolInfoGet
00000d84 T pgPoolNextFreeGet

pgPoolPhysLib.o:
000007e4 t pgPoolPhysRangeEachCallback
00000000 T pgPoolPhysLibInit
00000008 T pgPoolPhysAddToPool
         U __errno
         U __lsr64
         U pgPoolAddToPool
000000d0 T pgPoolPhysRemoveFromPool
         U pgPoolRemoveFromPool
00000198 T pgPoolPhysAlignedAlloc
         U pgPoolAlignedAlloc
         U __lsl64
00000214 T pgPoolPhysAlloc
00000248 T pgPoolPhysAllocAt
         U pgPoolAllocAt
00000334 T pgPoolPhysAvailAlloc
         U pgPoolAvailAlloc
0000037c T pgPoolPhysFree
         U pgPoolFree
00000444 T pgPoolPhysRangeIsFree
         U pgPoolRangeStateCheck
00000510 T pgPoolPhysRangeIsAllocated
000005dc T pgPoolPhysRangeVerify
         U pgPoolRangeVerify
000006a4 T pgPoolPhysNextFreeGet
         U pgPoolNextFreeGet
0000076c T pgPoolPhysRangeEach
         U semTake
         U avlUintTreeWalk
         U semGive

pgPoolVirtLib.o:
000004a0 t pgPoolVirtRangeEachCallback
00000000 T pgPoolVirtLibInit
00000008 T pgPoolVirtAddToPool
         U __errno
         U pgPoolAddToPool
00000070 T pgPoolVirtRemoveFromPool
         U pgPoolRemoveFromPool
000000d8 T pgPoolVirtAlignedAlloc
         U pgPoolAlignedAlloc
0000013c T pgPoolVirtAlloc
00000164 T pgPoolVirtAllocAt
         U pgPoolAllocAt
000001e4 T pgPoolVirtAvailAlloc
         U pgPoolAvailAlloc
00000224 T pgPoolVirtFree
         U pgPoolFree
0000028c T pgPoolVirtRangeIsFree
         U pgPoolRangeStateCheck
000002f8 T pgPoolVirtRangeIsAllocated
00000364 T pgPoolVirtRangeVerify
         U pgPoolRangeVerify
000003cc T pgPoolVirtNextFreeGet
         U pgPoolNextFreeGet
00000428 T pgPoolVirtRangeEach
         U semTake
         U avlUintTreeWalk
         U semGive
000004fc T pgPoolVirtBaseSet

pmapLib.o:
00000054 t _pmapGlobalMap
000002b0 t _pmapPrivateUnmap
00000358 t _pmapGlobalPhysAlignedAlloc
000000e4 t _pmapPrivateMap
0000020c t _pmapGlobalUnmap
000005bc t _pmapPrivatePhysAlignedFree
00000424 t _pmapGlobalPhysAlignedFree
000004a8 t _pmapPrivatePhysAlignedAlloc
00000000 T pmapLibInit
         U pmapLibFuncs
         U vmPageSizeGet
         U taskIdSelf
         U kernelId
         U __errno
         U __udiv32
         U adrSpacePageAlloc
         U pgMgrPageAllocAt
         U vmStateSet
         U vmPgUnMap
         U pgMgrPageFree
         U vmPageUnmap
         U kernelVirtPgPoolId
         U pgPoolVirtFree
         U pgMgrPageUnmap
         U globalRAMPgPoolId
         U pgPoolPhysAlignedAlloc
         U adrSpacePageUnmap

vmBaseLib.o:
00000000 b vmPageSize
00000004 b vmContextClass
000000e4 t vmBaseFuncsSet
0000043c t vmEnable
00000e94 t vmNonExecSupported
0000004c b vmInfo
00000000 T vmBaseLibInit
         U mmuLibFuncs
         U classInit
00000000 D vmContextClassId
         U sysVmContext
         U objCoreInit
         U semMInit
         U kernelId
         U _func_vmBaseFuncsSet
         U mmuArchCopySize
         U cacheArchAlignSize
         U vmLibInfo
00000384 T vmStateGet
00000154 T vmStateSet
00000460 T vmPageSizeGet
00000484 T vmTranslate
000010c8 T vmContigBlockEach
00000794 T vmMap
000007f4 T vmPageUnmap
000004f0 T vmPhysTranslate
000009f4 T vmBufferWrite
         U taskIdSelf
         U objVerify
         U __errno
         U vmAttrToArchConvert
         U __udiv32
00000254 T vmAttrToIndepConvert
         U mmuMaskTransTbl
         U mmuProtStateTransTbl
         U mmuCacheStateTransTbl
         U mmuValidStateTransTbl
00000564 T vmPgMap
         U _func_vmInvPageMap
         U semTake
         U mmuDataNoExec
         U semGive
000007bc T vmPageMap
         U _func_vmInvUnMap
00000950 T vmCurrentGet
00000970 T vmTextProtect
         U wrs_kernel_text_start
         U wrs_kernel_data_start
00000afc T vmPageOptimize
00000be0 T vmPteSizeGet
00000c64 T vmOptimizedSizeGet
00000cb0 T vmPageLock
00000d94 T vmPageUnlock
00000e60 T vmMaxPhysBitsGet
00000f34 T vmInfoGet
         U kProxHeapPartId
         U memPartAlignedAlloc
         U memPartFree
000010c0 T vmKernelContextIdGet
00000154 T vmBaseStateSet
00000460 T vmBasePageSizeGet
000007f4 T vmPgUnMap

vmGlobalMap.o:
00000000 b vmPageSize
00000000 T vmAttrToArchConvert
00000004 C mmuProtStateTransTbl
00000008 C mmuInvalidState
00000004 C mmuCacheStateTransTbl
00000004 C mmuValidStateTransTbl
00000004 C mmuMaskTransTbl
00000004 C mmuLibFuncs
         U __errno
00000240 T vmGlobalMapInit
00000008 C sysVmContext
         U highestRAMAddress
         U lowestRAMAddress
         U mmuDataNoExec
         U sysExcMsg
         U snprintf
         U __udiv32
         U vmLibInfo
00000004 C _func_vmInvPageMap
         U wrs_kernel_text_start
         U wrs_kernel_data_start
         U _func_taskMmuCurrentSet
         U cacheMmuAvailable
         U _func_cacheFuncsSet
00000004 C _func_vmBaseFuncsSet
00000004 C _func_vmInvUnMap

vmLib.o:
00000000 T vmLibInit
         U vmLibInfo
000003d8 T vmContextSwitch
0000001c T vmCtxInit
         U semMInit
         U mmuLibFuncs
         U vmContextClassId
         U objCoreInit
         U objOwnerSetBase
00000098 T vmCtxCreate
         U objAlloc
         U objFree
000000f4 T vmCtxUnionInit
         U objVerify
         U semTake
         U semGive
0000017c T vmCtxDestroy
         U taskIdSelf
         U vxAtomic32Add
         U evtAction
         U taskCpuUnlock
         U objCoreInvalidate
         U semTerminate
         U objCoreTerminate
         U eventPointSwHandle
0000024c T vmCtxDelete
00000254 T vmCtxTerminate
0000025c T vmCtxUnion
000002e8 T vmCtxMask
00000370 T vmPageBlockSizeGet
00000394 T vmCurrentSet
         U _func_taskMmuCurrentSet

adrSpaceShow.o:
00000008 t adrSpaceRegionFormat
00000000 d unitNames.52
000000d0 t adrSpaceRegionInfoShow
00000000 T adrSpaceShowInit
         U __mul64
         U printf
00000190 T adrSpaceShow
         U adrSpaceInfoGet
         U globalRAMPgPoolId
         U pgPoolBlockListShow
         U __udiv32
         U shmRgnPgPoolId
         U _func_rtpSpawn
         U adrSpaceIsOverlapped
         U rtpCodeStart
         U rtpCodeSize
         U kernelVirtPgPoolId

pgPoolShow.o:
00000104 t pgPoolPhysBlockShow
00000160 t pgPoolVirtBlockShow
00000000 d stateString
00000000 T pgPoolShowInit
00000008 T pgPoolBlockListShow
         U printf
         U pgPoolPhysRangeEach
         U pgPoolVirtRangeEach
00000070 T pgPoolShow
         U __mul64

sdShow.o:
00000000 d sdShowInstalled
0000004c t sdNameToId
000000a4 t sdIdFigure
000000fc t sdNameTruncate
00000188 t sdClientShow
00000008 d sdClientHdr.46
00000264 t sdSummaryShow
00000328 t sdOptionsStrGet
0000037c t sdDetailShow
00000588 t sdEachShow
00000004 d sdSummaryHdr.98
00000000 T sdShowInit
         U sdLibInstalled
         U sdClassId
000004a8 T sdShow
         U classShowConnect
         U strlen
         U malloc
         U strcpy
         U objNameToId
         U free
         U __errno
         U objVerify
         U objNamePtrGet
         U strncpy
         U kernelId
         U printf
         U objEach
         U semTake
         U sdIsMapped
         U semGive
         U vmAttrStringGet
         U sdVerifiedLock
         U strcat
         U fioRdString

vmInvTblLib.o:
00000000 t vmInvTransTblInit
0000007c b invLvl1TblSize
0000004c t vmInvTransTblCreate
00000088 b invTransTblSize
000000a0 b invLvl2Mask
00000090 b invLvl1DescNum
00000078 b invPageSize
00000094 b invLvl2DescNum
00000080 b invLvl2TblSize
000000b0 b invLvl1L2BaMsk
000000d4 b effAddrL1Shift
000000dc b effAddrL2Shift
000000d0 b effAddrL1Mask
000000d8 b effAddrL2Mask
000000bc b l1IndexShift
000000c8 b l2IndexShift
000000c0 b l1TbMask
000000cc b l2TbMask
000000c4 b l2IndexMask
000000b8 b l1IndexMask
000000b4 b l1ValidMask
00000098 b invLvlBDescNum
000000a8 b invLvlBMask
0000009c b invLvlADescNum
00000000 b inverseContext
00000000 d mutexOptionsVmInvTblLib
00000360 t vmInvTransTblGet
000004d8 t vmInvLvl1DescAddrGet
00000524 t vmInvLvl2DescAddrGet
000005a0 t vmInvTblUnMap
00000660 t vmInvLvl1DescInit
000006f0 t vmInvUpperLvlDescFree
00000774 t vmInvLvl2DescFree
000007b0 t vmInvTransTblDelete
00000848 t vmInvTblMap
         U kProxHeapAlignedAlloc
         U bzero
         U kProxHeapAlloc
         U kProxHeapFree
00000090 T vmInvTblLibInit
         U vmMaxPhysBitsGet
         U vmPageSizeGet
         U __udiv64
         U ffs32Msb
         U __lsl64
00000b6c T vmInvPageMap
         U _func_vmInvPageMap
000009a4 T vmInvUnMap
         U _func_vmInvUnMap
         U semMInit
         U avlUintSearch
         U avlUintInsert
         U __udiv32
         U semTake
         U semGive

vmShow.o:
00000000 b numOfNib
00000004 b formatStr
0000035c t vmContextShowNewBlock
00000000 T vmShowInit
         U vmMaxPhysBitsGet
00000124 T vmContextShow
         U vmContextClassId
         U classShowConnect
         U strncpy
0000006c T vmContextRangeShow
         U vmContigBlockEach
         U __errno
         U printf
000000f4 T vmContextHeaderPrint
00000144 T vmAttrStringGet
         U sprintf
00000444 T vmAttrShow

sdLib.o:
0000015c t vSdCreate
00000000 b sdHookTblSize
00000004 b pSdCreateHookTbl
00000008 b pSdDeleteHookTbl
0000000c b pSdGenericHookTbl
00001300 t sdUnmapAll
00000098 d sdMutexOptions
00000d1c t sdOpenInternal
00000010 b sdClass
00000000 T sdLibInit
00000090 D sdLibInstalled
00000094 D sdClassId
         U classInit
         U malloc
         U free
         U bzero
         U _func_rtpSdUnmapAll
         U taskIdSelf
         U kernelId
         U vmPageSizeGet
         U __urem32
         U __errno
         U objAlloc
         U semMInit
         U semTake
         U objCoreInit
         U objOwnerSet
         U objOwnerSetBase
         U semTerminate
         U qPriListClassId
         U qPriListInit
         U __udiv32
         U pgMgrPageAllocAt
         U adrSpacePageAlloc
         U semGive
         U vmTranslate
         U globalRtpMemFill
         U dllAdd
         U strlen
         U evtAction
         U pgMgrPageFree
         U adrSpacePageFree
         U objCoreTerminate
         U objFree
         U eventPointSwHandle
0000060c T sdDelete
00000000 D sdSpinLock
         U spinLockTaskTake
         U objVerify
         U spinLockTaskGive
         U vxAtomic32Get
         U kernelLockTake
         U windExit
         U errnoSet
         U vxAtomic32Or
         U windPendQPut
         U objCoreInvalidate
         U windPendQTerminate
         U pgPoolPhysFree
         U pgPoolVirtFree
         U globalRAMPgPoolId
0000096c T sdIsMapped
000009d0 T sdVerifiedLock
         U vxAtomic32Add
         U vxAtomic32Sub
         U vxAtomic32And
         U windPendQFlush
00000a98 T sdRtpMap
         U rtpVerifyAndLock
         U objOwnerGet
         U vmStateSet
         U vmPageMap
         U strncpy
         U objOpen
00000f14 T sdCreate
00000f5c T sdOpen
00000f9c T sdMap
00001060 T sdRtpUnmap
         U adrSpacePageUnmap
         U dllRemove
00001260 T sdUnmap
0000139c T sdProtect
         U cacheTextUpdate
00001570 T sdInfoGet
         U objNameGet
000016a4 T sdCreateHookAdd
         U hookAddToHead
         U hookAddToTail
000016dc T sdCreateHookDelete
         U hookDelete
000016f0 T sdDeleteHookAdd
00001728 T sdDeleteHookDelete
0000173c T sdGenericHookAdd
00001774 T sdGenericHookDelete

kProxHeapLib.o:
00000000 T kProxHeapInit
00000008 C kProxHeapPartition
         U memPartInit
00000004 C kProxHeapStart
00000004 C kProxHeapSize
         U __errno
         U sysExcMsg
         U sprintf
         U strlen
         U edrErrorInjectStub
         U edrInitFatalPolicyHandler
000000c0 T kProxHeapAlloc
         U memDefaultAlignment
00000000 D kProxHeapPartId
         U memPartAlignedAlloc
000000d8 T kProxHeapFree
         U memPartFree
000000e8 T kProxHeapAlignedAlloc
000000fc T kProxHeapRealloc
         U _func_memPartRealloc
         U bcopy

kCommonHeapLib.o:
00000000 t kCommonHeapGrow
00000000 b kCommonHeapIncrSize
00000004 b defaultMmuAttrCacheSpl
         U vmLibInfo
         U __udiv32
         U adrSpaceOptimizedSizeGet
         U mmuDataNoExec
         U adrSpacePageAlloc
00000118 T kCommonHeapInit
         U vmInfoGet
         U memSysPartition
         U memPartInit
         U memPartGrowRtnSet
         U __errno
         U sysExcMsg
         U snprintf
         U edrErrorInjectStub
         U edrInitFatalPolicyHandler

memRtpLib.o:
00000000 T memRtpLibInit
         U rtpAuxvAdd
         U vmLibInfo
         U cacheArchAlignSize

pgMgrLib.o:
00000314 t pgMgrRangeInit
0000004c t pgMgrVmCtxInit
000002d8 t pgMgrRangeMask
000001c8 t pgMgrRangeUnmap
00000000 T pgMgrLibInit
         U vmKernelContextIdGet
         U kernelId
         U pgPoolVirtRangeEach
         U vmCtxUnion
         U vmCtxMask
         U shmRgnPgPoolId
000000b8 T pgMgrCreate
         U malloc
         U pgMgrInit
         U vmPageSizeGet
         U pgPoolCreate
         U rtpCodeSize
         U __udiv32
         U rtpCodeStart
         U pgPoolVirtAddToPool
         U vmCtxCreate
         U vmCtxDelete
         U pgPoolDelete
         U free
00000188 T pgMgrPrivateUnmap
         U adrSpacePageUnmap
000001f4 T pgMgrDelete
         U mmuLibFuncs
         U _func_adrSpaceDirectBaseGet
         U _func_adrSpaceDirectSizeGet
         U vmCtxUnionInit

scMemVal.o:
00000004 d scPtrEnabled
00000014 t scMemRangeCheck
00000000 d mmuPageSize
00000000 T scMemValEnable
         U __errno
00000078 T scMemPrivValidate
         U vmPageSizeGet
         U taskIdSelf
         U vxMemProbeSup
         U mmanMemValidate
         U __udiv32
         U pgPoolVirtRangeIsAllocated
         U vmStateGet
000004b4 T scMemValidate
         U kernelId
0000059c T scMemValidateStr

memEdrRtpShow.o:
00000000 d noInstrErrMsg
00000000 T memEdrRtpShowInit
         U memEdrShowUtilInit
00000004 T memEdrRtpPartShow
         U rtpIdVerify
         U printf
         U sprintf
         U msgQOpen
         U msgQClose
         U memEdrPartHdrPrint
         U msgQSend
         U sysClkRateGet
         U msgQReceive
         U memEdrPartInfoPrint
0000016c T memEdrRtpBlockShow
         U memEdrTaskUidGet
         U memEdrBlockHdrPrint
         U memEdrBlockInfoPrint
         U memEdrUserStopGet
000003ac T memEdrRtpBlockMark

pgMgrShow.o:
00000004 t pgMgrOptsShow
00000140 t pgMgrRangeVmContextShow
00000000 T pgMgrShowInit
         U printf
00000018 T pgMgrShow
0000009c T pgMgrMemContextShow
         U vmPageSizeGet
         U pgMgrInfoGet
         U vmContextHeaderPrint
         U pgPoolVirtRangeEach
         U vmContextRangeShow

sdScLib.o:
00000000 T sdScInit
00000008 T _sdCreateSc
         U scMemValidateStr
         U scMemValidate
         U sdCreate
         U objHandleAlloc
0000009c T _sdOpenSc
         U sdOpen
0000013c T sdDeleteSc
         U sdClassId
         U objHandleAndClassToObjId
         U sdDelete
0000017c T sdMapSc
         U sdMap
000001d0 T sdUnmapSc
         U sdUnmap
00000210 T sdProtectSc
         U sdProtect
00000250 T sdInfoGetSc
         U sdInfoGet

libcoremm.a:

memFuncBind.o:
00000004 C _func_memalign
00000004 C _func_valloc
00000004 C __rta_longjmp
00000004 C _func_signalMmanHook
00000004 C _func_memPartCacheFree
00000004 C _func_memPartCacheInfoGet
00000004 C _func_memPartCacheAlloc

pmapBaseLib.o:
00000000 d defaultMmuAttrCacheSpl
00000000 T pmapBaseLibInit
         U vmInfoGet
00000040 T pmapGlobalMap
         U vmPageSizeGet
00000004 C pmapLibFuncs
         U __udiv32
00000004 C pmapVirtPgPoolId
         U pgPoolVirtAlloc
         U vmPageMap
00000144 T pmapGlobalUnmap
         U vmPageUnmap
         U pgPoolVirtFree
0000020c T pmapPrivateMap
00000240 T pmapPrivateUnmap
00000274 T pmapGlobalPhysAlignedAlloc
         U memalign
         U vmStateSet
         U free
00000334 T pmapGlobalPhysAlignedFree
         U mmuDataNoExec
00000400 T pmapPrivatePhysAlignedAlloc
00000434 T pmapPrivatePhysAlignedFree

taskMemFuncBind.o:
00000004 C _func_taskMemCtxSwitch
00000004 C _func_taskStackAlloc
00000004 C _func_taskStackFree

vmBind.o:
00000004 C _func_virtSegInfoGet
00000004 C _func_virtExtraMapInfoGet
00000004 C _func_taskMmuCurrentSet
00000000 D vmLibInfo
00000038 D mmuArchCopySize
0000003c D mmuDataNoExec
00000040 D vmIsSRWXURWXSupported

userReservedMem.o:
00000004 b userReservedSize
00000000 b userReservedAddr
00000000 T userReservedMemInit
         U sysMemDescGet
         U vmLibInfo
         U __errno
         U pmapGlobalMap
         U sysStartType
         U bfill
000000f8 T userReservedGet

memLib.o:
0000021c t memPartReallocInternal
000008b4 t memPartBlockError
00000860 t memPartAllocError
00000000 T memInit
000001c4 T valloc
         U _func_valloc
000001b4 T memalign
         U _func_memalign
         U _func_memPartReallocInternal
0000076c T memPartRealloc
         U _func_memPartRealloc
         U memPartBlockErrorRtn
         U memPartAllocErrorRtn
         U memPartOptionsDefault
         U memPartLibInit
0000006c T memPartOptionsSet
         U memPartVerifiedLock
         U memSysPartId
         U vxAtomic32Dec
         U kernelLockTake
         U windPendQGet
         U windExit
         U semMGive
0000012c T memPartOptionsGet
         U memPartAlignedAlloc
         U vmLibInfo
         U __errno
         U allocChunkEndGuardSize
         U memPartFree
         U memPartAlloc
         U semMTake
         U memPartBlockIsValid
         U memMsgBlockError
         U memPartEdrErrorInject
         U taskIdSelf
         U taskSuspend
         U sizeNodesAlloc
         U bcopy
         U memPartDeleteFree
         U memPartInsertFree
         U evtAction
         U memPartClassId
         U eventPointSwHandle
         U memPartClassLock
         U spinLockIsrTake
         U objVerify
         U spinLockIsrGive
         U vxAtomic32Inc
         U _func_logMsg
         U memMsgBlockTooBig
00000914 T memOptionsSet
00000924 T memOptionsGet
00000934 T memPartHooksInstall
000009d0 T memPartBlockValidate

memPartLib.o:
00000048 b memPartLibInstalled
0000087c t memPartDestroy
00000210 t memPartBlkAlignedAlloc
000005c4 t memPartAddToPoolInternal
000000a0 d _func_memPartCreateHook
00000d38 t memPartAlignedAllocInternal
00001124 t memPartFreeInternal
00001004 t memPartFreeDoWork
000018c8 t memPartBlkAllocN
00000000 b memPartClass
00000000 T memPartLibInit
00000000 D memPartClassId
         U classInit
00000008 D memDefaultAlignment
         U strlen
         U sysExcMsg
         U snprintf
         U edrErrorInjectStub
         U edrInitFatalPolicyHandler
000000e8 T memPartInsertFree
         U avlUintSearch
         U avlUintInsert
00000190 T memPartDeleteFree
         U avlUintDelete
00000018 D allocChunkEndGuardSize
         U avlUintSuccessorGet
0000045c T sizeNodesAlloc
         U __errno
         U evtAction
         U eventPointSwHandle
         U sllPutAtTail
00000790 T memPartInit
         U bfill
00000014 D memPartOptionsDefault
         U sllInit
         U semMInit
         U objCoreInit
         U qPriListClassId
         U qPriListInit
         U objOwnerSetBase
0000001c D _func_memPartReallocInternal
0000002c D memPartClassLock
         U spinLockIsrTake
         U objVerify
         U spinLockIsrGive
         U objCoreInvalidate
         U semMTake
         U vxAtomic32Dec
         U semMGive
         U kernelLockTake
         U windPendQPut
         U windExit
         U vxAtomic32Get
         U semTerminate
         U objCoreTerminate
         U objFree
000009e0 T memPartCreate
         U objAlloc
00000a74 T memPartDelete
00000a7c T memPartVerifiedLock
00000004 D memSysPartId
         U vxAtomic32Inc
         U windPendQGet
00000b70 T memPartAddToPool
00000c14 T memPartEdrErrorInject
         U _sigCtxSave
         U sprintf
         U taskIdSelf
         U edrKernelFatalPolicyHandler
00000010 D memPartAllocErrorRtn
         U errnoSet
00000024 D memMsgBlockTooBig
         U taskTcb
         U taskSuspend
00000ef4 T memPartAlignedAlloc
00000ff8 T memPartAlloc
00001094 T memPartBlockIsValid
0000000c D memPartBlockErrorRtn
00000028 D memMsgBlockError
000012fc T memPartFree
000013e4 T memAddToPool
000013f8 T malloc
         U _func_memPartCacheAlloc
0000147c T calloc
         U bzero
000014f8 T realloc
00000020 D _func_memPartRealloc
         U _func_memPartCacheFree
         U bcopy
00001764 T free
000017d4 T cfree
00001828 T memPartCreateHookSet
0000186c T memBlockSizeGet
00001888 T memPartGrowRtnSet
00001bfc T memPartAllocN
00001de8 T memPartFreeN
00000008 C memSysPartition

poolLib.o:
00000000 b poolListMutex
0000000c t poolBlockBuild
000000ec t poolPartIdGet
00000570 t poolBlockIsFree
000007cc t poolItemIsValid
00000000 T poolLibInit
         U semMInit
         U memPartAlignedAlloc
         U memPartAlloc
         U dllAdd
         U memSysPartId
         U memPartClassId
         U objVerify
         U kProxHeapPartId
00000128 T poolInitialize
         U dllInit
         U semMTake
00000000 D poolListGbl
         U semMGive
         U semTerminate
         U dllGet
         U memPartFree
00000254 T poolCreate
         U __errno
0000030c T poolDelete
         U dllRemove
00000460 T poolBlockAdd
         U __div32
00000544 T poolFindItem
000005c8 T poolUnusedBlocksFree
000006e8 T poolItemGet
         U intContext
         U __udiv32
00000844 T poolItemReturn
00000940 T poolIncrementSet
00000978 T poolIncrementGet
000009ac T poolTotalCount
000009e0 T poolFreeCount
00000a14 T poolIdListGet

taskMemLib.o:
00000000 d stackGuardPages
00000000 b vmInfo
00000004 d nonExecutableStack
00000008 d taskMemLibInitialized
00000000 T taskMemLibInit
         U vmInfoGet
00000084 T taskStackAlloc
         U _func_taskStackAlloc
0000044c T taskStackFree
         U _func_taskStackFree
00000058 T taskStackGuardPageEnable
0000006c T taskStackNoExecEnable
         U taskIdSelf
         U kernelId
         U vmPageSizeGet
         U memalign
         U __udiv32
         U _func_pgMgrPageAlloc
         U _func_pgMgrPageMap
         U _func_pgMgrPageFree
         U vmKernelContextIdGet
         U vmStateSet
         U free
         U mmuDataNoExec
         U _func_taskMemCtxSwitch

memPartCacheLib.o:
000003fc t memPartCacheAlloc
00000534 t memPartCacheFree
00000068 t memPartCacheCreateInternal
0000020c t memPartCacheDelete
00000138 t memPartCachePop
0000018c t memPartCacheFlush
0000024c t memPartCacheBinIndexGet
00000000 d binIx
00000021 d binSizes
00000280 t memPartCachePush
00000000 T memPartCacheLibInit
         U _func_memPartCacheAlloc
         U _func_memPartCacheFree
         U taskCreateHookAdd
         U taskDeleteHookAdd
         U taskTcb
         U calloc
00000120 T memPartCacheCreate
         U taskIdSelf
         U memSysPartId
         U memPartFree
         U free
00000270 T memPartCacheBinSizeGet
         U ffs32Lsb
         U memDefaultAlignment
         U vxKernelVars
         U vxCpuIndexGet
         U memPartAllocN
         U memBlockSizeGet
         U memPartBlockIsValid
         U __errno
         U memPartBlockErrorRtn
         U memPartEdrErrorInject
         U taskSuspend
         U memPartFreeN

memEdrLib.o:
00000160 d initialized.5
000003ac t memEdrPartCreateHook
00001a8c t memEdrTaskCreateHook
00001ad0 t memEdrTaskDeleteHook
00000038 d memEdrBlockMdNames
00000020 b memEdrkProxHeapPart
00000000 b memEdrHeapPart
000016b4 t memEdrReallocHook
000017d4 t memEdrPartDeleteHook
0000092c t memEdrAllocHook
000015d8 t memEdrFreeHook
000004c4 t memEdrCheckPartitionStatus
00000148 d messages.408
000005c0 t memEdrFreePatternValidate
000006c4 t memEdrFreeQueuePartFlush
0000085c t memEdrTrace
00001b50 t memEdrTrcPcValidate
00000e98 t memEdrFreeAndCopy
00000075 d unknownErrorMsg
0000008c d freeErrorMsg
000000a8 d globalErrorMsg
000000c7 d partitionErrorMsg
0000004c d stackErrorMsg
000000ed d allocatedErrorMsg
00000114 d invalidErrorMsg
000019a8 t memEdrBlockMatch
00001b40 t memEdrLocalReturn
00001c98 t memPartInfoCallback
00001d58 t memEdrBlkInfoCallback
00001f94 t memEdrBlkMarkCallback
00000000 T memEdrConfigInit
00000008 C memEdrDb
         U dllInit
         U memPartCreateHookSet
0000006c T memEdrMemInit
         U semMInit
         U cacheArchAlignSize
         U __udiv32
         U poolCreate
         U taskCreateHookAdd
         U taskDeleteHookAdd
         U taskIdSelf
00000004 C edrRootTaskInfo
00000178 T memEdrConfigClear
         U memPartHooksInstall
         U poolDelete
         U taskCreateHookDelete
         U taskDeleteHookDelete
000001f8 T memEdrErrorLog
         U __errno
         U snprintf
         U _sigCtxSave
         U edrErrorInjectStub
         U edrKernelFatalPolicyHandler
00000380 T memEdrItemGet
         U poolItemGet
         U kProxHeapPartition
         U semTake
         U semGive
00000008 D memEdrPoolErrMsg
         U dllAdd
         U dllGet
         U dllRemove
         U avlUintDelete
         U poolItemReturn
000007c8 T memEdrBlockFind
         U avlUintPredecessorGet
         U trcLibFuncs
         U memPartOptionsGet
         U memPartOptionsSet
         U taskTcb
         U bfill
         U avlUintInsert
         U memPartBlockValidate
00000004 D _func_rtcUncache
         U bcopy
         U kernelId
         U memPartBlockErrorRtn
         U taskSuspend
         U avlUintTreeWalk
000019e0 T memEdrFreeQueueFlush
000019ec T memEdrLocalFind
         U taskStackAllot
         U wrs_kernel_text_start
         U memPoolEndAdrs
         U vmLibInfo
         U vxMemProbe
00001bbc T memEdrPartInfoGet
00001cfc T memEdrBlockInfoGet
00001f20 T memEdrBlockMark
00000000 D memEdrEnable

memEdrRtc.o:
00000b44 t memEdrUncache
000009bc t memEdrDropStack
00000000 d rtcInitialized
00000000 b memEdrCache
00000000 T __rtc_init
         U _func_rtcUncache
         U __rta_longjmp
00000038 T __rtc_incl_auto
         U memEdrDb
         U intContext
         U kernelLockOwnedByMe
         U taskIdSelf
         U memEdrLocalFind
         U memEdrErrorLog
         U semTake
         U memEdrItemGet
         U semGive
         U memEdrPoolErrMsg
         U avlUintInsert
00000298 T __rtc_excl_auto
         U avlUintDelete
         U poolItemReturn
00000344 T __rtc_incl_auto0
0000034c T __rtc_excl_auto0
00000354 T __rtc_incl_mem
         U memEdrBlockFind
000004cc T __rtc_excl_mem
000005b4 T __rtc_chk_at
00000934 T __rtc_chk
0000095c T __rtc_inc_op_at
00000988 T __rtc_op_inc_at
         U avlUintMinimumGet

memEdrShow.o:
00000000 T memEdrShowInit
         U memEdrShowUtilInit
00000004 T memEdrPartShow
         U memEdrPartHdrPrint
         U memEdrPartInfoGet
         U printf
         U memEdrPartInfoPrint
00000060 T memEdrBlockShow
         U memEdrBlockHdrPrint
         U memEdrBlockInfoGet
         U kernelId
         U memEdrBlockInfoPrint
         U memEdrUserStopGet

memEdrShowUtil.o:
00000000 t memEdrTaskRegister
00000004 b taskRegistryPool
00000000 b memEdrTaskList
0000004c d showUtilInitialized.8
00000100 t memEdrTaskUidRegister
00000150 t memEdrTaskNameGet
00000048 d errName.30
0000026c t memEdrSymNameGet
00000028 d partStatNames
00000000 d blkMdNames
         U poolItemGet
         U taskName
         U strncpy
0000007c T memEdrShowUtilInit
         U poolCreate
         U taskIdSelf
         U taskDeleteHookAdd
         U taskCreateHookAdd
000001b8 T memEdrTaskUidGet
         U vxAtomic32Add
         U evtAction
         U taskClassId
         U objVerify
         U taskCpuUnlock
         U eventPointSwHandle
         U kernelId
         U objClassIdGet
         U sysSymTbl
         U _func_symFindSymbol
         U _func_symNameGet
         U _func_symValueGet
         U cplusDemangle
000003a0 T memEdrUserStopGet
         U printf
         U read
00000410 T memEdrPartInfoPrint
00000448 T memEdrBlockInfoPrint
         U _func_objHandleToObjId
000005e8 T memEdrPartHdrPrint
000005f0 T memEdrBlockHdrPrint

memInfo.o:
00000000 T memInfoInit
00000008 T memPartInfoGet
         U memPartVerifiedLock
         U avlUintMaximumGet
         U allocChunkEndGuardSize
         U memSysPartId
         U vxAtomic32Dec
         U kernelLockTake
         U windPendQGet
         U windExit
         U semMGive
000000e4 T memPartFindMax
00000178 T memInfoGet
00000188 T memFindMax
00000194 T memPartFreeListWalk
         U avlUintPredecessorGet
         U avlUintSuccessorGet

memPartCacheShow.o:
00000244 t memPartCacheInfoGet
00000000 T memPartCacheShowInit
         U _func_memPartCacheInfoGet
00000014 T memPartCacheShow
         U _func_memPartCacheAlloc
         U printf
         U taskIdListGet
         U taskIdListSort
         U taskName
         U strncpy
         U strlen
         U memPartCacheBinSizeGet
         U taskTcb

memShow.o:
00000010 t memPartOptionsPrint
000000a4 t memPartFreeListGet
000005f0 t memPartSizeNodeInfoGet
000000fc t memPartSectionListGet
00000134 t memPartFreeListPrint
00000000 T memShowInit
         U memPartClassId
00000244 T memPartShow
         U classShowConnect
         U printf
         U avlUintTreeWalk
         U memPartVerifiedLock
         U memPartInfoGet
         U memPartOptionsGet
         U memSysPartId
         U vxAtomic32Dec
         U kernelLockTake
         U windPendQGet
         U windExit
         U semMGive
         U __udiv32
         U __udiv64
         U _func_memPartCacheInfoGet
000005e0 T memShow

poolShow.o:
00000000 t poolShowAll
00000074 t poolBlockFreeCountGet
00000000 d optionStrings
         U poolIdListGet
         U printf
         U poolFindItem
000000d8 T poolShow
         U dllCount
         U __udiv32
         U semMTake
         U semMGive

adrSpaceFuncBind.o:
00000004 C _func_adrSpacePageAllocDirect
00000004 C _func_adrSpacePageFreeDirect
00000004 C _func_adrSpaceDirectBaseGet
00000004 C _func_adrSpaceDirectSizeGet
00000000 D lowestRAMAddress
00000008 D highestRAMAddress

adrSpaceLib.o:
00000000 b kernelSysMemDesc
00000020 b shmRgnPgPool
000007b0 t adrSpacePhysFree
00000c4c t adrSpacePhysBlockRelease
00000000 T adrSpaceLibInit
         U vmPageSizeGet
00000000 D rtpCodeStart
00000004 D rtpCodeSize
00000008 C globalRAMPgPool
         U pgPoolInit
00000004 C globalRAMPgPoolId
         U sysMemDescGet
         U __udiv32
         U pgPoolPhysAddToPool
         U memPoolEndAdrs
00000004 C pAsMemDesc
00000004 C asMemDescNumEnt
         U pgPoolPhysAllocAt
         U lowestRAMAddress
         U highestRAMAddress
00000008 C kernelVirtPgPool
00000004 C kernelVirtPgPoolId
         U pgPoolVirtBaseSet
         U pgPoolVirtAddToPool
00000004 C shmRgnPgPoolId
         U sysExcMsg
         U sprintf
         U __errno
0000038c T adrSpaceRAMAddToPool
00000438 T adrSpaceInfoGet
         U pgPoolInfoGet
00000530 T adrSpaceIsOverlapped
00000538 T adrSpaceRAMReserve
         U pgPoolPhysAlloc
000005ec T adrSpaceVirtReserve
         U pgPoolVirtAlloc
         U pgPoolVirtAllocAt
0000066c T adrSpaceOptimizedSizeGet
         U vmOptimizedSizeGet
         U __udiv64
         U vmContigBlockEach
000007f4 T adrSpacePageMap
         U vmLibInfo
         U pgPoolPhysRangeVerify
         U vmPgMap
         U pgPoolPhysFree
         U pgPoolPhysAlignedAlloc
         U pgPoolPhysAvailAlloc
00000bcc T adrSpacePageUnmap
         U vmPgUnMap
         U pgPoolPhysRangeIsAllocated
00000cd8 T adrSpacePageAlloc
         U mmuLibFuncs
         U _func_adrSpacePageAllocDirect
         U pgPoolVirtAlignedAlloc
         U pgPoolVirtFree
00000ec4 T adrSpacePageFree
         U _func_adrSpacePageFreeDirect

pgMgrBaseLib.o:
00000000 d defaultMmuAttrCacheSpl
00000000 b kernelPgMgr
00000170 t pgMgrMmuAttrUpdate
00000000 T pgMgrInit
         U globalRAMPgPoolId
00000028 T pgMgrBaseLibInit
         U vmInfoGet
000002f0 T pgMgrPageAlloc
         U _func_pgMgrPageAlloc
00000314 T pgMgrPageMap
         U _func_pgMgrPageMap
000000cc T pgMgrPageFree
         U _func_pgMgrPageFree
         U vmKernelContextIdGet
         U kernelVirtPgPoolId
         U kernelId
         U pgPoolVirtRangeIsAllocated
         U __errno
         U adrSpacePageUnmap
         U vxAtomicSub
         U pgPoolVirtFree
000001bc T pgMgrPageAllocAt
         U pgPoolVirtAlloc
         U pgPoolVirtAllocAt
         U adrSpacePageMap
         U vxAtomicAdd
000003d0 T pgMgrPageUnmap
00000444 T pgMgrPageAttrSet
         U vmPageSizeGet
         U vmStateSet
000004d8 T pgMgrPageAttrGet
         U vmStateGet
000004e0 T pgMgrInfoGet
         U pgPoolInfoGet

pgMgrFuncBind.o:
00000004 C _func_pgMgrPageAlloc
00000004 C _func_pgMgrPageMap
00000004 C _func_pgMgrPageFree
00000004 C _func_pgMgrOverlapIterate

pgPoolLib.o:
00000008 b nodePool
00000000 b nodePoolId
000000c8 b initialNodes
00000000 d mutexOptionsPgPoolLib
00000e64 t pgPoolNodeReturnCallback
0000024c t pgPoolInsertFree
000002dc t pgPoolDeleteFree
0000033c t pgPoolRangeStateSet
00000000 T pgPoolLibInit
         U kProxHeapPartId
         U poolInitialize
         U poolBlockAdd
00000078 T pgPoolInit
         U __errno
         U semMInit
         U kernelId
         U objOwnerSetBase
         U ffsMsb
00000168 T pgPoolCreate
         U malloc
         U free
000001b4 T pgPoolDelete
         U semTake
         U avlUintTreeWalk
         U semTerminate
         U avlUintSearch
         U poolItemGet
         U avlUintInsert
         U avlUintDelete
         U poolItemReturn
         U avlUintPredecessorGet
         U avlUintSuccessorGet
000005f0 T pgPoolAddToPool
         U semGive
00000750 T pgPoolRemoveFromPool
00000858 T pgPoolAlignedAlloc
00000928 T pgPoolAllocAt
00000a28 T pgPoolAvailAlloc
         U avlUintMaximumGet
00000afc T pgPoolFree
00000be8 T pgPoolRangeStateCheck
00000c78 T pgPoolRangeVerify
00000d0c T pgPoolInfoGet
00000d84 T pgPoolNextFreeGet

pgPoolPhysLib.o:
000007e4 t pgPoolPhysRangeEachCallback
00000000 T pgPoolPhysLibInit
00000008 T pgPoolPhysAddToPool
         U __errno
         U __lsr64
         U pgPoolAddToPool
000000d0 T pgPoolPhysRemoveFromPool
         U pgPoolRemoveFromPool
00000198 T pgPoolPhysAlignedAlloc
         U pgPoolAlignedAlloc
         U __lsl64
00000214 T pgPoolPhysAlloc
00000248 T pgPoolPhysAllocAt
         U pgPoolAllocAt
00000334 T pgPoolPhysAvailAlloc
         U pgPoolAvailAlloc
0000037c T pgPoolPhysFree
         U pgPoolFree
00000444 T pgPoolPhysRangeIsFree
         U pgPoolRangeStateCheck
00000510 T pgPoolPhysRangeIsAllocated
000005dc T pgPoolPhysRangeVerify
         U pgPoolRangeVerify
000006a4 T pgPoolPhysNextFreeGet
         U pgPoolNextFreeGet
0000076c T pgPoolPhysRangeEach
         U semTake
         U avlUintTreeWalk
         U semGive

pgPoolVirtLib.o:
000004a0 t pgPoolVirtRangeEachCallback
00000000 T pgPoolVirtLibInit
00000008 T pgPoolVirtAddToPool
         U __errno
         U pgPoolAddToPool
00000070 T pgPoolVirtRemoveFromPool
         U pgPoolRemoveFromPool
000000d8 T pgPoolVirtAlignedAlloc
         U pgPoolAlignedAlloc
0000013c T pgPoolVirtAlloc
00000164 T pgPoolVirtAllocAt
         U pgPoolAllocAt
000001e4 T pgPoolVirtAvailAlloc
         U pgPoolAvailAlloc
00000224 T pgPoolVirtFree
         U pgPoolFree
0000028c T pgPoolVirtRangeIsFree
         U pgPoolRangeStateCheck
000002f8 T pgPoolVirtRangeIsAllocated
00000364 T pgPoolVirtRangeVerify
         U pgPoolRangeVerify
000003cc T pgPoolVirtNextFreeGet
         U pgPoolNextFreeGet
00000428 T pgPoolVirtRangeEach
         U semTake
         U avlUintTreeWalk
         U semGive
000004fc T pgPoolVirtBaseSet

pmapLib.o:
00000054 t _pmapGlobalMap
000002b0 t _pmapPrivateUnmap
00000358 t _pmapGlobalPhysAlignedAlloc
000000e4 t _pmapPrivateMap
0000020c t _pmapGlobalUnmap
000005bc t _pmapPrivatePhysAlignedFree
00000424 t _pmapGlobalPhysAlignedFree
000004a8 t _pmapPrivatePhysAlignedAlloc
00000000 T pmapLibInit
         U pmapLibFuncs
         U vmPageSizeGet
         U taskIdSelf
         U kernelId
         U __errno
         U __udiv32
         U adrSpacePageAlloc
         U pgMgrPageAllocAt
         U vmStateSet
         U vmPgUnMap
         U pgMgrPageFree
         U vmPageUnmap
         U kernelVirtPgPoolId
         U pgPoolVirtFree
         U pgMgrPageUnmap
         U globalRAMPgPoolId
         U pgPoolPhysAlignedAlloc
         U adrSpacePageUnmap

vmBaseLib.o:
00000000 b vmPageSize
00000004 b vmContextClass
000000e4 t vmBaseFuncsSet
0000043c t vmEnable
00000e94 t vmNonExecSupported
0000004c b vmInfo
00000000 T vmBaseLibInit
         U mmuLibFuncs
         U classInit
00000000 D vmContextClassId
         U sysVmContext
         U objCoreInit
         U semMInit
         U kernelId
         U _func_vmBaseFuncsSet
         U mmuArchCopySize
         U cacheArchAlignSize
         U vmLibInfo
00000384 T vmStateGet
00000154 T vmStateSet
00000460 T vmPageSizeGet
00000484 T vmTranslate
000010c8 T vmContigBlockEach
00000794 T vmMap
000007f4 T vmPageUnmap
000004f0 T vmPhysTranslate
000009f4 T vmBufferWrite
         U taskIdSelf
         U objVerify
         U __errno
         U vmAttrToArchConvert
         U __udiv32
00000254 T vmAttrToIndepConvert
         U mmuMaskTransTbl
         U mmuProtStateTransTbl
         U mmuCacheStateTransTbl
         U mmuValidStateTransTbl
00000564 T vmPgMap
         U _func_vmInvPageMap
         U semTake
         U mmuDataNoExec
         U semGive
000007bc T vmPageMap
         U _func_vmInvUnMap
00000950 T vmCurrentGet
00000970 T vmTextProtect
         U wrs_kernel_text_start
         U wrs_kernel_data_start
00000afc T vmPageOptimize
00000be0 T vmPteSizeGet
00000c64 T vmOptimizedSizeGet
00000cb0 T vmPageLock
00000d94 T vmPageUnlock
00000e60 T vmMaxPhysBitsGet
00000f34 T vmInfoGet
         U kProxHeapPartId
         U memPartAlignedAlloc
         U memPartFree
000010c0 T vmKernelContextIdGet
00000154 T vmBaseStateSet
00000460 T vmBasePageSizeGet
000007f4 T vmPgUnMap

vmGlobalMap.o:
00000000 b vmPageSize
00000000 T vmAttrToArchConvert
00000004 C mmuProtStateTransTbl
00000008 C mmuInvalidState
00000004 C mmuCacheStateTransTbl
00000004 C mmuValidStateTransTbl
00000004 C mmuMaskTransTbl
00000004 C mmuLibFuncs
         U __errno
00000240 T vmGlobalMapInit
00000008 C sysVmContext
         U highestRAMAddress
         U lowestRAMAddress
         U mmuDataNoExec
         U sysExcMsg
         U snprintf
         U __udiv32
         U vmLibInfo
00000004 C _func_vmInvPageMap
         U wrs_kernel_text_start
         U wrs_kernel_data_start
         U _func_taskMmuCurrentSet
         U cacheMmuAvailable
         U _func_cacheFuncsSet
00000004 C _func_vmBaseFuncsSet
00000004 C _func_vmInvUnMap

vmLib.o:
00000000 T vmLibInit
         U vmLibInfo
000003d8 T vmContextSwitch
0000001c T vmCtxInit
         U semMInit
         U mmuLibFuncs
         U vmContextClassId
         U objCoreInit
         U objOwnerSetBase
00000098 T vmCtxCreate
         U objAlloc
         U objFree
000000f4 T vmCtxUnionInit
         U objVerify
         U semTake
         U semGive
0000017c T vmCtxDestroy
         U taskIdSelf
         U vxAtomic32Add
         U evtAction
         U taskCpuUnlock
         U objCoreInvalidate
         U semTerminate
         U objCoreTerminate
         U eventPointSwHandle
0000024c T vmCtxDelete
00000254 T vmCtxTerminate
0000025c T vmCtxUnion
000002e8 T vmCtxMask
00000370 T vmPageBlockSizeGet
00000394 T vmCurrentSet
         U _func_taskMmuCurrentSet

adrSpaceShow.o:
00000008 t adrSpaceRegionFormat
00000000 d unitNames.52
000000d0 t adrSpaceRegionInfoShow
00000000 T adrSpaceShowInit
         U __mul64
         U printf
00000190 T adrSpaceShow
         U adrSpaceInfoGet
         U globalRAMPgPoolId
         U pgPoolBlockListShow
         U __udiv32
         U shmRgnPgPoolId
         U _func_rtpSpawn
         U adrSpaceIsOverlapped
         U rtpCodeStart
         U rtpCodeSize
         U kernelVirtPgPoolId

pgPoolShow.o:
00000104 t pgPoolPhysBlockShow
00000160 t pgPoolVirtBlockShow
00000000 d stateString
00000000 T pgPoolShowInit
00000008 T pgPoolBlockListShow
         U printf
         U pgPoolPhysRangeEach
         U pgPoolVirtRangeEach
00000070 T pgPoolShow
         U __mul64

sdShow.o:
00000000 d sdShowInstalled
0000004c t sdNameToId
000000a4 t sdIdFigure
000000fc t sdNameTruncate
00000188 t sdClientShow
00000008 d sdClientHdr.46
00000264 t sdSummaryShow
00000328 t sdOptionsStrGet
0000037c t sdDetailShow
00000588 t sdEachShow
00000004 d sdSummaryHdr.98
00000000 T sdShowInit
         U sdLibInstalled
         U sdClassId
000004a8 T sdShow
         U classShowConnect
         U strlen
         U malloc
         U strcpy
         U objNameToId
         U free
         U __errno
         U objVerify
         U objNamePtrGet
         U strncpy
         U kernelId
         U printf
         U objEach
         U semTake
         U sdIsMapped
         U semGive
         U vmAttrStringGet
         U sdVerifiedLock
         U strcat
         U fioRdString

vmInvTblLib.o:
00000000 t vmInvTransTblInit
0000007c b invLvl1TblSize
0000004c t vmInvTransTblCreate
00000088 b invTransTblSize
000000a0 b invLvl2Mask
00000090 b invLvl1DescNum
00000078 b invPageSize
00000094 b invLvl2DescNum
00000080 b invLvl2TblSize
000000b0 b invLvl1L2BaMsk
000000d4 b effAddrL1Shift
000000dc b effAddrL2Shift
000000d0 b effAddrL1Mask
000000d8 b effAddrL2Mask
000000bc b l1IndexShift
000000c8 b l2IndexShift
000000c0 b l1TbMask
000000cc b l2TbMask
000000c4 b l2IndexMask
000000b8 b l1IndexMask
000000b4 b l1ValidMask
00000098 b invLvlBDescNum
000000a8 b invLvlBMask
0000009c b invLvlADescNum
00000000 b inverseContext
00000000 d mutexOptionsVmInvTblLib
00000360 t vmInvTransTblGet
000004d8 t vmInvLvl1DescAddrGet
00000524 t vmInvLvl2DescAddrGet
000005a0 t vmInvTblUnMap
00000660 t vmInvLvl1DescInit
000006f0 t vmInvUpperLvlDescFree
00000774 t vmInvLvl2DescFree
000007b0 t vmInvTransTblDelete
00000848 t vmInvTblMap
         U kProxHeapAlignedAlloc
         U bzero
         U kProxHeapAlloc
         U kProxHeapFree
00000090 T vmInvTblLibInit
         U vmMaxPhysBitsGet
         U vmPageSizeGet
         U __udiv64
         U ffs32Msb
         U __lsl64
00000b6c T vmInvPageMap
         U _func_vmInvPageMap
000009a4 T vmInvUnMap
         U _func_vmInvUnMap
         U semMInit
         U avlUintSearch
         U avlUintInsert
         U __udiv32
         U semTake
         U semGive

vmShow.o:
00000000 b numOfNib
00000004 b formatStr
0000035c t vmContextShowNewBlock
00000000 T vmShowInit
         U vmMaxPhysBitsGet
00000124 T vmContextShow
         U vmContextClassId
         U classShowConnect
         U strncpy
0000006c T vmContextRangeShow
         U vmContigBlockEach
         U __errno
         U printf
000000f4 T vmContextHeaderPrint
00000144 T vmAttrStringGet
         U sprintf
00000444 T vmAttrShow

sdLib.o:
0000015c t vSdCreate
00000000 b sdHookTblSize
00000004 b pSdCreateHookTbl
00000008 b pSdDeleteHookTbl
0000000c b pSdGenericHookTbl
00001300 t sdUnmapAll
00000098 d sdMutexOptions
00000d1c t sdOpenInternal
00000010 b sdClass
00000000 T sdLibInit
00000090 D sdLibInstalled
00000094 D sdClassId
         U classInit
         U malloc
         U free
         U bzero
         U _func_rtpSdUnmapAll
         U taskIdSelf
         U kernelId
         U vmPageSizeGet
         U __urem32
         U __errno
         U objAlloc
         U semMInit
         U semTake
         U objCoreInit
         U objOwnerSet
         U objOwnerSetBase
         U semTerminate
         U qPriListClassId
         U qPriListInit
         U __udiv32
         U pgMgrPageAllocAt
         U adrSpacePageAlloc
         U semGive
         U vmTranslate
         U globalRtpMemFill
         U dllAdd
         U strlen
         U evtAction
         U pgMgrPageFree
         U adrSpacePageFree
         U objCoreTerminate
         U objFree
         U eventPointSwHandle
0000060c T sdDelete
00000000 D sdSpinLock
         U spinLockTaskTake
         U objVerify
         U spinLockTaskGive
         U vxAtomic32Get
         U kernelLockTake
         U windExit
         U errnoSet
         U vxAtomic32Or
         U windPendQPut
         U objCoreInvalidate
         U windPendQTerminate
         U pgPoolPhysFree
         U pgPoolVirtFree
         U globalRAMPgPoolId
0000096c T sdIsMapped
000009d0 T sdVerifiedLock
         U vxAtomic32Add
         U vxAtomic32Sub
         U vxAtomic32And
         U windPendQFlush
00000a98 T sdRtpMap
         U rtpVerifyAndLock
         U objOwnerGet
         U vmStateSet
         U vmPageMap
         U strncpy
         U objOpen
00000f14 T sdCreate
00000f5c T sdOpen
00000f9c T sdMap
00001060 T sdRtpUnmap
         U adrSpacePageUnmap
         U dllRemove
00001260 T sdUnmap
0000139c T sdProtect
         U cacheTextUpdate
00001570 T sdInfoGet
         U objNameGet
000016a4 T sdCreateHookAdd
         U hookAddToHead
         U hookAddToTail
000016dc T sdCreateHookDelete
         U hookDelete
000016f0 T sdDeleteHookAdd
00001728 T sdDeleteHookDelete
0000173c T sdGenericHookAdd
00001774 T sdGenericHookDelete

kProxHeapLib.o:
00000000 T kProxHeapInit
00000008 C kProxHeapPartition
         U memPartInit
00000004 C kProxHeapStart
00000004 C kProxHeapSize
         U __errno
         U sysExcMsg
         U sprintf
         U strlen
         U edrErrorInjectStub
         U edrInitFatalPolicyHandler
000000c0 T kProxHeapAlloc
         U memDefaultAlignment
00000000 D kProxHeapPartId
         U memPartAlignedAlloc
000000d8 T kProxHeapFree
         U memPartFree
000000e8 T kProxHeapAlignedAlloc
000000fc T kProxHeapRealloc
         U _func_memPartRealloc
         U bcopy

kCommonHeapLib.o:
00000000 t kCommonHeapGrow
00000000 b kCommonHeapIncrSize
00000004 b defaultMmuAttrCacheSpl
         U vmLibInfo
         U __udiv32
         U adrSpaceOptimizedSizeGet
         U mmuDataNoExec
         U adrSpacePageAlloc
00000118 T kCommonHeapInit
         U vmInfoGet
         U memSysPartition
         U memPartInit
         U memPartGrowRtnSet
         U __errno
         U sysExcMsg
         U snprintf
         U edrErrorInjectStub
         U edrInitFatalPolicyHandler

memRtpLib.o:
00000000 T memRtpLibInit
         U rtpAuxvAdd
         U vmLibInfo
         U cacheArchAlignSize

pgMgrLib.o:
00000314 t pgMgrRangeInit
0000004c t pgMgrVmCtxInit
000002d8 t pgMgrRangeMask
000001c8 t pgMgrRangeUnmap
00000000 T pgMgrLibInit
         U vmKernelContextIdGet
         U kernelId
         U pgPoolVirtRangeEach
         U vmCtxUnion
         U vmCtxMask
         U shmRgnPgPoolId
000000b8 T pgMgrCreate
         U malloc
         U pgMgrInit
         U vmPageSizeGet
         U pgPoolCreate
         U rtpCodeSize
         U __udiv32
         U rtpCodeStart
         U pgPoolVirtAddToPool
         U vmCtxCreate
         U vmCtxDelete
         U pgPoolDelete
         U free
00000188 T pgMgrPrivateUnmap
         U adrSpacePageUnmap
000001f4 T pgMgrDelete
         U mmuLibFuncs
         U _func_adrSpaceDirectBaseGet
         U _func_adrSpaceDirectSizeGet
         U vmCtxUnionInit

scMemVal.o:
00000004 d scPtrEnabled
00000014 t scMemRangeCheck
00000000 d mmuPageSize
00000000 T scMemValEnable
         U __errno
00000078 T scMemPrivValidate
         U vmPageSizeGet
         U taskIdSelf
         U vxMemProbeSup
         U mmanMemValidate
         U __udiv32
         U pgPoolVirtRangeIsAllocated
         U vmStateGet
000004b4 T scMemValidate
         U kernelId
0000059c T scMemValidateStr

memEdrRtpShow.o:
00000000 d noInstrErrMsg
00000000 T memEdrRtpShowInit
         U memEdrShowUtilInit
00000004 T memEdrRtpPartShow
         U rtpIdVerify
         U printf
         U sprintf
         U msgQOpen
         U msgQClose
         U memEdrPartHdrPrint
         U msgQSend
         U sysClkRateGet
         U msgQReceive
         U memEdrPartInfoPrint
0000016c T memEdrRtpBlockShow
         U memEdrTaskUidGet
         U memEdrBlockHdrPrint
         U memEdrBlockInfoPrint
         U memEdrUserStopGet
000003ac T memEdrRtpBlockMark

pgMgrShow.o:
00000004 t pgMgrOptsShow
00000140 t pgMgrRangeVmContextShow
00000000 T pgMgrShowInit
         U printf
00000018 T pgMgrShow
0000009c T pgMgrMemContextShow
         U vmPageSizeGet
         U pgMgrInfoGet
         U vmContextHeaderPrint
         U pgPoolVirtRangeEach
         U vmContextRangeShow

sdScLib.o:
00000000 T sdScInit
00000008 T _sdCreateSc
         U scMemValidateStr
         U scMemValidate
         U sdCreate
         U objHandleAlloc
0000009c T _sdOpenSc
         U sdOpen
0000013c T sdDeleteSc
         U sdClassId
         U objHandleAndClassToObjId
         U sdDelete
0000017c T sdMapSc
         U sdMap
000001d0 T sdUnmapSc
         U sdUnmap
00000210 T sdProtectSc
         U sdProtect
00000250 T sdInfoGetSc
         U sdInfoGet
